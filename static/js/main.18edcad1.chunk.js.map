{"version":3,"sources":["assets/cursors/move.cur","assets/cursors/link.cur","Components/Node/Node.jsx","Components/Playback/Sliders/Base.jsx","Components/Playback/SpeedSlider/SpeedSlider.jsx","Components/Playback/SpeedSlider/SpeedSlider.Styles.jsx","Context/global-context.jsx","Components/Playback/GridSizeSlider/GridSizeSlider.Styles.jsx","Components/Playback/GridSizeSlider/GridSizeSlider.jsx","Components/Playback/Spinner/Spinner.jsx","Components/Playback/Playback.Styles.jsx","Components/Playback/Playback.jsx","Components/Visualizer/Visualizer.jsx","Components/Editor/Editor.Styles.jsx","Components/Editor/APIDescriptor/Descriptor.jsx","Components/Editor/APIDescriptor/parameters.js","Components/Editor/APIDescriptor/functions.js","Components/Editor/DialogContainer/DialogContainer.Styles.jsx","Components/Editor/DialogContainer/DialogContainer.jsx","Components/Editor/APIDescriptor/APIDescriptor.jsx","Components/Editor/APIDescriptor/APIDescriptor.Styles.jsx","Components/Editor/Message/Message.jsx","Components/Editor/Message/Message.Styles.jsx","Components/Editor/Benchmark/DataRow.jsx","Components/Editor/Benchmark/Benchmark.jsx","Components/Editor/Message/messages.js","Classes/Stack.js","Algorithms/pathfindingAlgorithms.js","Algorithms/algorithmUtils.js","Components/Editor/interpreterScope.js","Algorithms/mappingAlgorithms.js","Algorithms/cleaningAlgorithms.js","Classes/Exception.js","Components/Editor/validators.js","Classes/Robot.js","Components/Editor/code.js","Components/Editor/editorUtils.js","Components/Editor/Editor.jsx","Components/Editor/configsHelper.js","Components/Tools/InteractiveBattery.jsx","Components/Tools/BatterySlider/BatterySliderStyles.jsx","Components/Tools/BatterySlider/BatterySlider.jsx","Components/Tools/Tools.Styles.jsx","Components/Tools/Tools.jsx","Components/Controller/StyledMenu.jsx","Components/Controller/Controller.jsx","Components/Controller/Controller.Styles.jsx","Theme.js","Context/GlobalStateUtils.js","Context/GlobalState.jsx","App.js","index.js"],"names":["module","exports","Node","this","props","row","col","isStart","onMouseDown","onMouseEnter","onMouseLeave","onMouseUp","extraClassName","id","className","onDragStart","e","preventDefault","PureComponent","Base","withStyles","root","color","height","thumb","width","backgroundColor","border","marginTop","marginLeft","boxShadow","active","valueLabel","left","track","borderRadius","rail","Slider","useStyles","makeStyles","textAlign","SpeedSlider","disabled","min","max","onSpeedChange","classes","React","useState","value","setValue","Typography","gutterBottom","Grid","container","spacing","item","xs","onChange","event","sliderValue","calculatedSpeed","Math","abs","aria-labelledby","createContext","state","grid","availableSteps","undefined","simulationType","activeAlgorithm","editorScript","editorSimulation","isFinished","isRunning","startNode","configLoaded","drawItem","drawMethod","request","robot","map","gridHeight","gridWidth","updateState","key","callback","param","loadConfiguration","nextConfiguration","saveConfiguration","resizeGrid","resetGridWithCurrentConfiguration","getInitialGrid","saveUserScript","loadUserScript","isStartNode","convertBatteryCapacityToAvailableSteps","convertAvailableStepsToBatteryCapacity","marginRight","GridSizeSliderStyles","marks","label","valuetext","valueLabelFormat","findIndex","mark","GridSizeSlider","onGridSizeChange","context","useContext","GlobalContext","useEffect","length","getAriaValueText","newValue","step","valueLabelDisplay","useStylesFacebook","theme","bottom","palette","grey","type","top","animationDuration","circle","strokeLinecap","CustomCircularProgress","CircularProgress","variant","disableShrink","size","thickness","icon","fontSize","button","display","justifyContent","marginBottom","ControlStyles","Controls","onReset","onPlay","IconButton","Spinner","onClick","Visualizer","handleSpeedChanged","speed","handleReset","applyNodesStyles","setWalls","setDust","handleGridSizeChange","removeWalls","removeDust","removeHighlight","setHighlight","nodeRef","refs","parseInt","split","gridNode","mapNode","nodeDOM","ReactDOM","findDOMNode","classList","remove","dust","isMapped","add","isWall","handleMouseDown","mouseDown","startNodeMouseDown","rectLocStart","changeNodeWall","toggle","changeNodeDust","handleMouseEnter","createAndRenderRectangle","fill","handleMouseLeave","rectangleNodes","calculateRectangleNodes","forEach","node","handleMouseUp","startPoint","endPoint","upperPoint","leftPoint","rowDiff","colDiff","i","j","push","visualize","visitedNodesInOrder","visualizationArray","inflateFirstNodeOccurencesAccordingToDust","setTimeout","unlockControls","console","log","set","Set","setComparableNode","JSON","stringify","has","handlePlay","activeAlgorithmCallback","func","syncMapLayoutWithGrid","robotPath","path","updateMap","handleClearWalls","handleClearDust","Playback","rowIndex","ref","Component","contextType","appBar","position","toolBar","paddingRight","input","title","flex","editorBtn","background","borderColor","transition","modal","alignItems","paper","shadows","msgBtn","fontWeight","popover","pointerEvents","popoverText","padding","Transition","forwardRef","Slide","direction","Descriptor","name","snippet","description","descriptionElementRef","DialogContentText","tabIndex","style","outline","customStyle","language","showLineNumbers","hybrid","PaperComponent","handle","cancel","Paper","topTitle","dialogTitle","cursor","dragCursor","DialogContainer","showDialog","setShowDialog","children","Dialog","open","Boolean","scroll","maxWidth","fullWidth","aria-describedby","DialogTitle","disableTypography","DialogActions","Button","divider","APIDescriptor","showAPI","setShowAPI","useRef","descriptionElement","current","focus","DialogContent","dividers","Divider","parameters","functions","whiteSpace","alertIcon","paddingTop","Message","message","setMessage","onClose","bottomTitle","severity","dismissable","animationDelay","Modal","disableEnforceFocus","disableAutoFocus","disableBackdropClick","disableEscapeKeyDown","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","enter","exit","Alert","AlertTitle","alert","borderBottom","DataRow","onBenchmarkReplay","setOpen","Fragment","TableRow","TableCell","aria-label","align","component","scope","avgRuntime","avgEfficiency","paddingBottom","colSpan","Collapse","unmountOnExit","Box","margin","Table","TableHead","TableBody","configs","configName","dimensions","runtime","efficiency","battery","config","Benchmark","showBenchmark","setShowBenchmark","data","TableContainer","algData","INFO_MSG","SUCCESS_MSG","VALIDATE_GRID_NODES","elem","Array","isArray","VALIDATE_PROPERTIES","VALIDATE_COORDINATES","VALIDATE_NON_ADJACENT","currNode","prevNode","VALIDATE_WALL","Stack","items","pop","itemToBeChecked","includes","sortNodesByDistance","unvisitedNodes","sort","nodeA","nodeB","distance","updateUnvisitedNeighborsDistances","neighbors","getNeighbors","filter","neighbor","isVisited","previousNode","astar","finishNode","filters","invokedFromEditor","attribute","evaluation","searchPropsResetter","resetGridSearchProperties","heuristicDistance","priorityQueue","sortNodesByHeuristicDistance","closestNode","shift","isEqual","getShortestPathNodesInOrder","res","tentativeWeightedDistance","manhattanDistance","MAX_DISTANCE","shortestPathInOrder","currentNode","unshift","getAllNodes","concat","isNeighbors","node1","node2","isValidCoordinates","getGridDeepCopy","gridCopy","parse","fillPathGapsInNodeList","nodeList","removeDuplicateNodes","splice","shuffle","array","floor","random","adjustRobotPathToBatteryAndInsertReturnPath","dockingStation","search","runningMap","startNodeRef","visitedNodesConsideringBattery","slice","pathToDockingStation","INTERPRETER_resetGridSearchProperties","INTERPRETER_astar","baseMap","extendToMapCurrentBorder","pathToBorderNode","visitCount","randomOptimized","neighborsAscending","n1","n2","neighborsDescending","neighborsProbabilities","multipliers","count","bestFirst","plotPathToBorderNode","isBorderNodeRequiredAndAccesible","pathToBufferNode","unmappedAreaBufferNode","getRandomBufferNode","unmappedMapAdjacentNodes","shortened","offsets","dirRow","dirCol","numRows","numCols","calculateSpiralTraversalOffsets","spiralOrderFromStartNode","offset","gridDimensionsLimitedCoords","nodeCoord","accessibleNodes","bfs","accessibleNodesCoords","spiralOrderNodes","currStartNode","dfsResult","stack","isEmpty","dfs","findBestCandidate","neighbour","sortedNeighborsByWeight","neigbour1","neigbour2","isCleaningPossible","bestCandidate","returnPath","graph","isValidNode","getWeight","adjList","edges","u","v","w","Object","keys","currPath","circuit","Exception","result","MSG","isObject","entries","Number","isInteger","firstNode","lastNode","Robot","getInitialMap","DEFAULT_EDITOR_MARKUP","createSandboxedInterpreter","code","interpreter","Interpreter","window","Babel","loadScript","transform","presets","sourceType","err","compileToES5","appendCode","arg","setValueToScope","nativeToPseudo","scopeFunctions","funcObj","establishEnvironment","url","script","document","createElement","readyState","onreadystatechange","onload","src","getElementsByTagName","appendChild","extendAutocomplete","editor","funcProtoString","parsedFunc","toString","args","substring","indexOf","resArgs","localKeywords","autoComplete","getCompletions","session","pos","prefix","caption","meta","$mode","$highlightRules","$keywordList","word","createWordsArray","completers","measure","algorithm","buildContextFromConfig","t0","performance","now","run","t1","pseudoToNative","runInterpreterCalculateRuntime","runNativeAlgorithmCalculateRuntime","a","b","c","t","reduce","flat","calcSweepingEfficiency","unmappedNodesCount","calcMappingEfficiency","calculateEfficiency","transformScoresToBenchmarkData","scores","calculateAverage","alg","property","algGroup","algName","parseFloat","toFixed","editorStyles","Editor","setCodeEditorOpen","firstMount","setFirstMount","showError","setShowError","showClearWarning","setShowClearWarning","showSuccess","setShowSuccess","showInfo","setShowInfo","anchorElSaveScript","setAnchorSaveScript","anchorElLoadScript","setAnchorElLoadScript","anchorElCreateConfigurationsFile","setAnchorElCreateConfigurationsFile","validatedResult","setValidatedResult","ace","cache","handleClose","handlePopoverOpen","currentTarget","handlePopoverClose","fullScreen","TransitionComponent","AppBar","Toolbar","edge","accept","reader","FileReader","readAsText","target","files","htmlFor","onMouseOver","multiple","file","jsonFile","blob","Blob","saveAs","handleCreateConfigurationsFile","autoFocus","isCachedValidatedResultAvailable","start","Date","getTime","checkTimeLimitExceeded","validators","validator","validate","cacheValidatedResult","mode","onLoad","getSession","setMode","inline","commands","on","selection","getCursor","getLength","stopPropagation","restrictEditingSegment","showPrintMargin","currentCode","setOptions","enableBasicAutocompletion","enableSnippets","enableLiveAutocompletion","tabSize","justify","benchmark","isCachedBenchmarkAvailable","benchmarkAlgorithms","mappingAlgorithms","cleaningAlgorithms","getBenchmarkAlgorithms","benchmarkConfigs","adjustMapToSimulationType","addDummyRobotToConfig","dummy","staticConfigs","values","getBenchmarkConfigs","cacheBenchmark","replay","adjustBenchmarkConfigToLoaderRequirements","Popover","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","disableRestoreFocus","InteractiveBattery","currentCapacity","paddingLeft","PrettoSlider","CustomizedSlider","steps","iconActive","Tools","anchorElDrawingItemDust","setAnchorElDrawingItemDust","anchorElDrawingItemWall","setAnchorElDrawingItemWall","anchorElDrawFree","setAnchorElDrawFree","anchorElDrawRectangle","setAnchorElDrawRectangle","anchorElSaveConfiguration","setAnchorElSaveConfiguration","anchorElLoadConfiguration","setAnchorElLoadConfiguration","anchorElHighlightMap","setAnchorElHighlightMap","anchorElDrawObstacle","setAnchorElDrawObstacle","anchorElBatteryCapacityClick","setAnchorElBatteryCapacityClick","anchorElBatteryCapacityHover","setAnchorElBatteryCapacityHover","handleDrawingItemButtonClicked","handleDrawingMethodButtonClicked","handleSaveConfiguration","tools","hidden","newLayout","Menu","elevation","getContentAnchorEl","navButton","textTransform","listItemTxt","textDecoration","menuItem","toolbar","logoPlaceholder","fontStyle","zIndex","Controller","anchorElMapAlgMenu","setAnchorElMapAlgMenu","anchorElCleanAlgMenu","setAnchorElCleanAlgMenu","anchorElSimulationTypeMenu","setAnchorElSimulationType","codeEditorOpen","handleSimulationTypeSelected","selectedSimulationType","handleSimulationTypeMenuClose","handleAlgorithmSelected","selectedAlgorithm","menuCloseCallback","handleMapMenuClose","handleCleanAlgMenuClose","aria-controls","aria-haspopup","StyledMenu","menu","keepMounted","MenuItem","ListItemText","primary","menuItemText","createMuiTheme","overrides","MuiSlider","handPointer","MuiIconButton","MuiButton","MuiButtonBase","typography","fontFamily","h2","subtitle1","letterSpacing","subtitle2","main","dark","contrastText","secondary","calculateDefaultDockingStation","createNode","GlobalState","defaultDockingStation","setState","rows","cols","toLocaleDateString","replace","toLocaleTimeString","retrieveFunctionReference","currentRow","currSteps","Provider","App","ThemeProvider","render","getElementById"],"mappings":"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","file":"static/js/main.18edcad1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/move.fe4dd1d3.cur\";","module.exports = __webpack_public_path__ + \"static/media/link.1d0a56b4.cur\";","import React, { PureComponent } from \"react\";\nimport \"./Node.css\";\n\nexport default class Node extends PureComponent {\n  render() {\n    const {\n      row,\n      col,\n      isStart,\n      onMouseDown,\n      onMouseEnter,\n      onMouseLeave,\n      onMouseUp,\n    } = this.props;\n    const extraClassName = isStart ? \"node-start\" : \"\";\n    /* The pattern of sending the handlers for the node from the parent could be costly performance wise, because\n    the functions recreates on every re-render. we avoid it because we use direct DOM access to change styles, and barely rerendering the \n    Node components with react. */\n    const nodeJSX = (\n      <div\n        id={`node-${row}-${col}`}\n        className={`node ${extraClassName}`}\n        onMouseDown={() => onMouseDown(row, col)}\n        onMouseUp={() => onMouseUp(row, col)}\n        onMouseEnter={() => onMouseEnter(row, col)}\n        onMouseLeave={() => onMouseLeave(row, col)}\n        onDragStart={(e) => e.preventDefault()}\n      ></div>\n    );\n    return nodeJSX;\n  }\n}\n","import { withStyles } from \"@material-ui/core/styles\";\nimport Slider from \"@material-ui/core/Slider\";\n\nconst Base = withStyles({\n  root: {\n    color: \"#1f2833\",\n    height: 8,\n  },\n  thumb: {\n    height: 24,\n    width: 24,\n    backgroundColor: \"#fff\",\n    border: \"2px solid currentColor\",\n    marginTop: -8,\n    marginLeft: -12,\n    \"&:focus, &:hover, &$active\": {\n      boxShadow: \"inherit\",\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: \"calc(-50% + 4px)\",\n  },\n  track: {\n    height: 8,\n    borderRadius: 4,\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4,\n  },\n})(Slider);\n\nexport default Base;\n","import React from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"../Sliders/Base\";\nimport SpeedSliderStyles from \"./SpeedSlider.Styles\";\n\nconst useStyles = SpeedSliderStyles;\n\nexport default function SpeedSlider({ disabled, min, max, onSpeedChange }) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState((max + min) / 2);\n  const handleChange = (event, sliderValue) => {\n    let calculatedSpeed = Math.abs(sliderValue - (max + min));\n    setValue(sliderValue);\n    onSpeedChange(calculatedSpeed);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Typography id=\"continuous-slider\" gutterBottom>\n        Speed\n      </Typography>\n      <Grid container spacing={2}>\n        <Grid item xs>\n          <Slider\n            value={value}\n            max={max}\n            min={min}\n            onChange={handleChange}\n            disabled={disabled}\n            aria-labelledby=\"continuous-slider\"\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles({\r\n  root: {\r\n    width: 200,\r\n    marginLeft: \"2em\",\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n","import { createContext } from \"react\";\r\n\r\nexport default createContext({\r\n  state: {\r\n    grid: [],\r\n    availableSteps: undefined,\r\n    simulationType: \"\",\r\n    activeAlgorithm: undefined,\r\n    editorScript: \"\",\r\n    editorSimulation: {},\r\n    isFinished: false,\r\n    isRunning: false,\r\n    startNode: undefined,\r\n    configLoaded: false,\r\n    drawItem: \"\",\r\n    drawMethod: \"\",\r\n    request: \"\",\r\n  },\r\n\r\n  robot: { map: [] },\r\n  gridHeight: undefined,\r\n  gridWidth: undefined,\r\n\r\n  updateState: (key, value, callback, param) => {},\r\n  loadConfiguration: (nextConfiguration) => {},\r\n  saveConfiguration: () => {},\r\n  resizeGrid: (height, callback) => {},\r\n  resetGridWithCurrentConfiguration: (callback, param) => {},\r\n  getInitialGrid: () => {},\r\n  saveUserScript: () => {},\r\n  loadUserScript: () => {},\r\n  isStartNode: (row, col) => {},\r\n  convertBatteryCapacityToAvailableSteps: () => {},\r\n  convertAvailableStepsToBatteryCapacity: () => {},\r\n});\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles({\r\n  root: {\r\n    width: 200,\r\n    marginRight: \"2em\",\r\n    marginLeft: \"4em\",\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n","import React, { useState, useEffect, useContext } from \"react\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"../Sliders/Base\";\n\nimport GlobalContext from \"../../../Context/global-context\";\nimport GridSizeSliderStyles from \"./GridSizeSlider.Styles\";\n\nconst MIN = 15;\nconst MAX = 25;\nconst DEFAULT_VALUE = 20;\n\nconst useStyles = GridSizeSliderStyles;\n\nconst marks = [\n  {\n    value: 15,\n    label: \"15x30\",\n  },\n  {\n    value: 20,\n    label: \"20x40\",\n  },\n  {\n    value: 25,\n    label: \"25x50\",\n  },\n];\n\nfunction valuetext(value) {\n  return `${value}x${value * 2}`;\n}\n\nfunction valueLabelFormat(value) {\n  return marks.findIndex((mark) => mark.value === value) + 1;\n}\n\nexport default function GridSizeSlider({ disabled, onGridSizeChange }) {\n  const context = useContext(GlobalContext);\n  const classes = useStyles();\n  const [value, setValue] = useState(DEFAULT_VALUE);\n\n  useEffect(() => {\n    if (context.state.configLoaded) {\n      if (context.state.grid.length !== value) {\n        setValue(context.state.grid.length);\n      }\n    }\n  }, [context.state.configLoaded, context.state.grid.length, value]);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    onGridSizeChange(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Typography id=\"discrete-slider-restrict\" gutterBottom>\n        Grid Size\n      </Typography>\n      <Slider\n        value={value}\n        valueLabelFormat={valueLabelFormat}\n        getAriaValueText={valuetext}\n        aria-labelledby=\"discrete-slider-restrict\"\n        onChange={handleChange}\n        disabled={disabled}\n        step={null}\n        min={MIN}\n        max={MAX}\n        valueLabelDisplay=\"auto\"\n        marks={marks}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStylesFacebook = makeStyles((theme) => ({\n  bottom: {\n    color: theme.palette.grey[theme.palette.type === \"light\" ? 200 : 700],\n  },\n  top: {\n    color: \"#1f2833\",\n    animationDuration: \"550ms\",\n\n    left: 0,\n  },\n  circle: {\n    strokeLinecap: \"round\",\n  },\n}));\n\nfunction CustomCircularProgress(props) {\n  const classes = useStylesFacebook();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress\n        variant=\"indeterminate\"\n        disableShrink\n        className={classes.top}\n        classes={{\n          circle: classes.circle,\n        }}\n        size={40}\n        thickness={4}\n        {...props}\n      />\n    </div>\n  );\n}\nexport default CustomCircularProgress;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles((theme) => ({\n  icon: {\n    fontSize: \"2em\",\n  },\n  button: {\n    color: \"#1F2833\",\n  },\n  container: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginBottom: \"2em\",\n    marginRight: \"8em\",\n  },\n}));\n","import React, { useContext } from \"react\";\r\n\r\nimport SpeedSlider from \"./SpeedSlider/SpeedSlider\";\r\nimport GridSizeSlider from \"./GridSizeSlider/GridSizeSlider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PlayIcon from \"@material-ui/icons/PlayCircleFilledWhite\";\r\nimport ResetIcon from \"@material-ui/icons/RotateLeftTwoTone\";\r\nimport Spinner from \"./Spinner/Spinner\";\r\n\r\nimport ControlStyles from \"./Playback.Styles\";\r\nimport GlobalContext from \"../../Context/global-context\";\r\n\r\nexport const DEFAULT_SPEED = 200;\r\n\r\nconst MIN_SPEED = 130;\r\nconst MAX_SPEED = 270;\r\n\r\nconst useStyles = ControlStyles;\r\n\r\nconst Controls = ({ onReset, onPlay, onSpeedChange, onGridSizeChange }) => {\r\n  const context = useContext(GlobalContext);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <GridSizeSlider\r\n        onGridSizeChange={onGridSizeChange}\r\n        disabled={context.state.isRunning}\r\n      />\r\n      {context.state.isRunning ? (\r\n        <IconButton disabled>\r\n          <Spinner />\r\n        </IconButton>\r\n      ) : context.state.isFinished ? (\r\n        <IconButton className={classes.button} onClick={onReset}>\r\n          <ResetIcon className={classes.icon} />\r\n        </IconButton>\r\n      ) : (\r\n        <IconButton\r\n          className={classes.button}\r\n          onClick={onPlay}\r\n          disabled={\r\n            !context.state.activeAlgorithm && !context.state.editorSimulation\r\n          }\r\n        >\r\n          <PlayIcon className={classes.icon} />\r\n        </IconButton>\r\n      )}\r\n      <SpeedSlider\r\n        min={MIN_SPEED}\r\n        max={MAX_SPEED}\r\n        onSpeedChange={onSpeedChange}\r\n        disabled={context.state.isRunning}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Controls;\r\n","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport Node from \"../Node/Node\";\r\nimport Playback, { DEFAULT_SPEED } from \"../Playback/Playback\";\r\n\r\nimport \"./Visualizer.css\";\r\n\r\nimport GlobalContext from \"../../Context/global-context\";\r\n\r\nexport default class Visualizer extends Component {\r\n  static contextType = GlobalContext;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.speed = DEFAULT_SPEED;\r\n    this.mouseDown = false;\r\n    this.startNodeMouseDown = false;\r\n  }\r\n\r\n  handleSpeedChanged = (speed) => {\r\n    this.speed = speed;\r\n  };\r\n\r\n  handleReset = () => {\r\n    this.context.updateState(\"isFinished\", false);\r\n    this.context.resetGridWithCurrentConfiguration(this.applyNodesStyles, {\r\n      setWalls: true,\r\n      setDust: true,\r\n    });\r\n  };\r\n\r\n  handleGridSizeChange = (height) => {\r\n    if (height === this.context.gridHeight) return;\r\n    this.context.resizeGrid(height, this.applyNodesStyles, {\r\n      removeWalls: true,\r\n      removeDust: true,\r\n      removeHighlight: true,\r\n    });\r\n  };\r\n\r\n  applyNodesStyles = ({\r\n    removeHighlight,\r\n    removeWalls,\r\n    removeDust,\r\n    setWalls,\r\n    setDust,\r\n    setHighlight,\r\n  }) => {\r\n    const { grid } = this.context.state;\r\n    const { robot } = this.context;\r\n    for (let nodeRef in this.refs) {\r\n      const row = parseInt(nodeRef.split(\"-\")[1]);\r\n      const col = parseInt(nodeRef.split(\"-\")[2]);\r\n      const gridNode = grid[row][col];\r\n      const mapNode = robot.map[row][col];\r\n      const nodeDOM = ReactDOM.findDOMNode(this.refs[nodeRef]);\r\n      if (removeWalls) {\r\n        nodeDOM.classList.remove(\"node-wall\");\r\n      }\r\n      if (removeDust) {\r\n        if (nodeDOM.classList.length > 1) {\r\n          const dust = nodeDOM.classList[1];\r\n          nodeDOM.classList.remove(`${dust}`);\r\n        }\r\n      }\r\n      if (removeHighlight) {\r\n        if (mapNode.isMapped) {\r\n          nodeDOM.classList.remove(\"highlight\");\r\n          if (gridNode.dust) {\r\n            nodeDOM.classList.add(`dust-${gridNode.dust}`);\r\n          }\r\n        }\r\n      }\r\n      if (setWalls) {\r\n        nodeDOM.classList.remove(\"node-wall\");\r\n        if (gridNode.isWall) {\r\n          nodeDOM.classList.add(\"node-wall\");\r\n        }\r\n      }\r\n      if (setDust) {\r\n        if (gridNode.dust) {\r\n          nodeDOM.classList.add(`dust-${gridNode.dust}`);\r\n        }\r\n      }\r\n      if (setHighlight) {\r\n        if (mapNode.isMapped) {\r\n          nodeDOM.classList.add(\"highlight\");\r\n          if (gridNode.dust) {\r\n            const dust = nodeDOM.classList[1];\r\n            nodeDOM.classList.remove(`${dust}`);\r\n          }\r\n        }\r\n      }\r\n      if (!this.context.isStartNode(row, col))\r\n        nodeDOM.classList.remove(`node-start`);\r\n      else {\r\n        nodeDOM.classList.add(`node-start`);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleMouseDown = (row, col) => {\r\n    const { drawMethod, drawItem, isFinished, isRunning } = this.context.state;\r\n\r\n    if (isFinished || isRunning) return;\r\n    this.mouseDown = true;\r\n    if (this.context.isStartNode(row, col)) {\r\n      this.startNodeMouseDown = true;\r\n      ReactDOM.findDOMNode(this.refs[`node-${row}-${col}`]).classList.remove(\r\n        `node-start`\r\n      );\r\n    } else {\r\n      if (drawMethod === \"rectangle\" || drawMethod === \"filled rectangle\") {\r\n        this.rectLocStart = { row, col };\r\n      }\r\n      if (drawItem === \"wall\") {\r\n        this.changeNodeWall(row, col, { toggle: true });\r\n      }\r\n      if (drawItem === \"dust\") {\r\n        this.changeNodeDust(row, col, { add: true });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleMouseEnter = (row, col) => {\r\n    const { drawMethod, drawItem, isFinished, isRunning } = this.context.state;\r\n\r\n    if (isFinished || !this.mouseDown || isRunning) return;\r\n    if (this.startNodeMouseDown) {\r\n      ReactDOM.findDOMNode(this.refs[`node-${row}-${col}`]).classList.add(\r\n        `node-start`\r\n      );\r\n    } else if (drawMethod === \"filled rectangle\") {\r\n      this.createAndRenderRectangle(row, col, { fill: true, add: true });\r\n    } else if (drawMethod === \"rectangle\") {\r\n      this.createAndRenderRectangle(row, col, { fill: false, add: true });\r\n    } else if (drawMethod === \"free\") {\r\n      if (drawItem === \"wall\") {\r\n        this.changeNodeWall(row, col, { toggle: true });\r\n      }\r\n      if (drawItem === \"dust\") {\r\n        this.changeNodeDust(row, col, { add: true });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleMouseLeave = (row, col) => {\r\n    const { drawMethod, isFinished, isRunning } = this.context.state;\r\n\r\n    if (isFinished || isRunning) return;\r\n    if (this.startNodeMouseDown) {\r\n      ReactDOM.findDOMNode(this.refs[`node-${row}-${col}`]).classList.remove(\r\n        `node-start`\r\n      );\r\n    } else if (this.mouseDown) {\r\n      if (drawMethod === \"rectangle\") {\r\n        this.createAndRenderRectangle(row, col, {\r\n          fill: false,\r\n          toggle: true,\r\n        });\r\n      } else if (drawMethod === \"filled rectangle\") {\r\n        this.createAndRenderRectangle(row, col, { fill: true, toggle: true });\r\n      }\r\n    }\r\n  };\r\n\r\n  createAndRenderRectangle = (row, col, { fill, add, toggle }) => {\r\n    const { drawItem } = this.context.state;\r\n    const rectangleNodes = this.calculateRectangleNodes(row, col, {\r\n      fill,\r\n    });\r\n\r\n    if (add) {\r\n      if (drawItem === \"wall\") {\r\n        rectangleNodes.forEach((node) =>\r\n          this.changeNodeWall(node.row, node.col, { add: true })\r\n        );\r\n      }\r\n      if (drawItem === \"dust\") {\r\n        rectangleNodes.forEach((node) =>\r\n          this.changeNodeDust(node.row, node.col, { add: true })\r\n        );\r\n      }\r\n    } else {\r\n      if (drawItem === \"wall\") {\r\n        rectangleNodes.forEach((node) =>\r\n          this.changeNodeWall(node.row, node.col, { toggle: true })\r\n        );\r\n      }\r\n      if (drawItem === \"dust\") {\r\n        rectangleNodes.forEach((node) =>\r\n          this.changeNodeDust(node.row, node.col, { remove: true })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  handleMouseUp = (row, col) => {\r\n    const { isFinished, isRunning, grid } = this.context.state;\r\n    const { updateState } = this.context;\r\n    const node = grid[row][col];\r\n    const nodeDOM = ReactDOM.findDOMNode(this.refs[`node-${row}-${col}`]);\r\n\r\n    if (isFinished || isRunning) return;\r\n    if (this.startNodeMouseDown) {\r\n      if (node.isWall) {\r\n        this.changeNodeWall(row, col, { remove: true });\r\n      }\r\n      if (node.dust) {\r\n        this.changeNodeDust(row, col, { remove: true });\r\n      }\r\n      nodeDOM.classList.add(`node-start`);\r\n      updateState(\"startNode\", { row: row, col: col });\r\n    }\r\n    this.startNodeMouseDown = false;\r\n    this.mouseDown = false;\r\n  };\r\n\r\n  calculateRectangleNodes = (row, col, { fill }) => {\r\n    const rectangleNodes = [];\r\n    const startPoint = this.rectLocStart;\r\n    const endPoint = { row, col };\r\n    const upperPoint = startPoint.row < endPoint.row ? startPoint : endPoint;\r\n    const leftPoint = startPoint.col < endPoint.col ? startPoint : endPoint;\r\n    const rowDiff = Math.abs(startPoint.row - endPoint.row);\r\n    const colDiff = Math.abs(startPoint.col - endPoint.col);\r\n\r\n    for (let i = upperPoint.row; i <= rowDiff + upperPoint.row; i++) {\r\n      for (let j = leftPoint.col; j <= colDiff + leftPoint.col; j++) {\r\n        if (!fill) {\r\n          if (\r\n            (j === startPoint.col ||\r\n              j === endPoint.col ||\r\n              i === startPoint.row ||\r\n              i === endPoint.row) &&\r\n            !this.context.isStartNode(i, j)\r\n          ) {\r\n            rectangleNodes.push({ row: i, col: j });\r\n          }\r\n        } else {\r\n          rectangleNodes.push({ row: i, col: j });\r\n        }\r\n      }\r\n    }\r\n    return rectangleNodes;\r\n  };\r\n\r\n  changeNodeWall = (row, col, { toggle, add, remove }) => {\r\n    const node = this.context.state.grid[row][col];\r\n    const nodeDOM = ReactDOM.findDOMNode(this.refs[`node-${row}-${col}`]);\r\n\r\n    if (!this.context.isStartNode(row, col)) {\r\n      if (node.dust) {\r\n        this.changeNodeDust(row, col, { remove: true });\r\n      }\r\n      if (toggle) {\r\n        nodeDOM.classList.toggle(\"node-wall\");\r\n        node.isWall = !node.isWall;\r\n      } else if (add) {\r\n        nodeDOM.classList.add(\"node-wall\");\r\n        node.isWall = true;\r\n      } else if (remove) {\r\n        nodeDOM.classList.remove(\"node-wall\");\r\n        node.isWall = false;\r\n      }\r\n    }\r\n  };\r\n  changeNodeDust = (row, col, { remove, add }) => {\r\n    const node = this.context.state.grid[row][col];\r\n    if (node.isWall) return;\r\n    const nodeDOM = ReactDOM.findDOMNode(this.refs[`node-${row}-${col}`]);\r\n    const [MIN_DUST, MAX_DUST] = [0, 9];\r\n    if (!this.context.isStartNode(row, col)) {\r\n      const dust = node.dust;\r\n      if (add) {\r\n        if (node.dust < MAX_DUST) {\r\n          nodeDOM.classList.add(`dust-${dust + 1}`);\r\n          if (dust > MIN_DUST) {\r\n            nodeDOM.classList.remove(`dust-${dust}`);\r\n          }\r\n          node.dust++;\r\n        } else if (node.dust === MAX_DUST) {\r\n          nodeDOM.classList.remove(`dust-${MAX_DUST}`);\r\n          node.dust = MIN_DUST;\r\n        }\r\n      } else if (remove) {\r\n        nodeDOM.classList.remove(`dust-${dust}`);\r\n        node.dust = MIN_DUST;\r\n      }\r\n    }\r\n  };\r\n\r\n  visualize = (visitedNodesInOrder) => {\r\n    if (!visitedNodesInOrder || visitedNodesInOrder.length === 0) {\r\n      this.unlockControls();\r\n      return;\r\n    }\r\n    const { simulationType } = this.context.state;\r\n\r\n    const visualizationArray =\r\n      simulationType === \"sweep\"\r\n        ? this.inflateFirstNodeOccurencesAccordingToDust(visitedNodesInOrder)\r\n        : visitedNodesInOrder;\r\n\r\n    for (let i = 0; i <= visualizationArray.length; i++) {\r\n      if (i === visualizationArray.length) {\r\n        setTimeout(() => {\r\n          this.unlockControls();\r\n        }, this.speed * i);\r\n        return;\r\n      }\r\n      const node = visualizationArray[i];\r\n      const { row, col } = node;\r\n      const nodeDOM = ReactDOM.findDOMNode(\r\n        this.refs[`node-${node.row}-${node.col}`]\r\n      );\r\n      setTimeout(() => {\r\n        let { availableSteps } = this.context.state;\r\n        if (nodeDOM === null) {\r\n          console.log([nodeDOM, node]);\r\n        }\r\n        nodeDOM.classList.add(\"node-visited\");\r\n        if (simulationType === \"sweep\")\r\n          this.changeNodeDust(row, col, { remove: true });\r\n        if (node !== visualizationArray[i - 1]) {\r\n          this.context.updateState(\"availableSteps\", availableSteps - 1);\r\n        }\r\n      }, this.speed * i);\r\n      setTimeout(() => {\r\n        nodeDOM.classList.remove(\"node-visited\");\r\n      }, this.speed * (i + 1));\r\n    }\r\n  };\r\n\r\n  inflateFirstNodeOccurencesAccordingToDust = (visitedNodesInOrder) => {\r\n    /* \r\n    This function task is to allow the visualization to express a delay when the robot traverses over a node with dust.\r\n    The delay is only visual and unrelated to the amount of steps which we calculated the visualization list by.\r\n    */\r\n    const set = new Set();\r\n    const visualizationArray = [];\r\n    visitedNodesInOrder.forEach((node) => {\r\n      const { row, col } = node;\r\n      const setComparableNode = JSON.stringify({ row, col });\r\n      if (!set.has(setComparableNode)) {\r\n        set.add(setComparableNode);\r\n        for (let i = 0; i < node.dust + 1; i++) {\r\n          visualizationArray.push(node);\r\n        }\r\n      } else {\r\n        visualizationArray.push(node);\r\n      }\r\n    });\r\n    return visualizationArray;\r\n  };\r\n\r\n  unlockControls = () => {\r\n    this.context.updateState(\"isRunning\", false);\r\n    this.context.updateState(\"isFinished\", true);\r\n    if (this.context.state.editorSimulation) {\r\n      this.context.updateState(\"editorSimulation\", false);\r\n    }\r\n  };\r\n\r\n  handlePlay = () => {\r\n    const {\r\n      simulationType,\r\n      availableSteps,\r\n      activeAlgorithm,\r\n      startNode,\r\n      editorSimulation,\r\n      grid,\r\n    } = this.context.state;\r\n    const {\r\n      convertAvailableStepsToBatteryCapacity,\r\n      updateState,\r\n      robot,\r\n    } = this.context;\r\n\r\n    const activeAlgorithmCallback =\r\n      (simulationType === \"map\" || simulationType === \"sweep\") &&\r\n      !editorSimulation &&\r\n      activeAlgorithm.func;\r\n\r\n    if (convertAvailableStepsToBatteryCapacity() === 0) return;\r\n\r\n    updateState(\"isRunning\", true);\r\n\r\n    robot.syncMapLayoutWithGrid(grid);\r\n\r\n    const robotPath = editorSimulation\r\n      ? editorSimulation.path\r\n      : activeAlgorithmCallback(\r\n          grid,\r\n          robot.map,\r\n          robot.map[startNode.row][startNode.col],\r\n          availableSteps\r\n        );\r\n\r\n    if (simulationType === \"map\" && editorSimulation?.type !== \"replay\") {\r\n      robot.updateMap(robotPath);\r\n    }\r\n    if (editorSimulation) {\r\n      this.context.updateState(\"editorSimulation\", {\r\n        ...editorSimulation,\r\n        path: null,\r\n      });\r\n    }\r\n    this.visualize(robotPath);\r\n  };\r\n\r\n  handleClearWalls = () => {\r\n    const { gridHeight, gridWidth, isStartNode } = this.context;\r\n    const { grid } = this.context.state;\r\n\r\n    for (let row = 0; row < gridHeight; row++) {\r\n      for (let col = 0; col < gridWidth; col++) {\r\n        if (!isStartNode(row, col)) {\r\n          if (grid[row][col].isWall) {\r\n            this.changeNodeWall(row, col, { remove: true });\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.context.updateState(\"request\", false);\r\n  };\r\n\r\n  handleClearDust = () => {\r\n    const { gridHeight, gridWidth, isStartNode } = this.context;\r\n    const { grid } = this.context.state;\r\n\r\n    for (let row = 0; row < gridHeight; row++) {\r\n      for (let col = 0; col < gridWidth; col++) {\r\n        if (!isStartNode(row, col)) {\r\n          if (grid[row][col].dust) {\r\n            this.changeNodeDust(row, col, { remove: true });\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.context.updateState(\"request\", false);\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    const { request, editorSimulation, configLoaded } = this.context.state;\r\n    const isEditorSimulationRequired = () =>\r\n      /*\r\n      We require that the config loading process as part of the playback would be finished as well, before calling visualize.\r\n      This is necessary because in order to access some DOM node elemnts we need the Visualizer component to sense a change in the \"grid\" \r\n      state parameter, so it would rerender it in it's correct size and also assign refs values to all of its nodes. the grid changes only \r\n      after loading the config, but the editorSimulation state update is not coupled with the config state update so the asynchronity of setState\r\n      allows that editorSimulation.path can be updated before it's associated config has loaded.\r\n      so here we actually verify that both state changes happened and only then we call visualize that relies on DOM access using refs. \r\n      */\r\n      editorSimulation.path &&\r\n      (configLoaded || editorSimulation.type === \"user\");\r\n\r\n    if (isEditorSimulationRequired()) {\r\n      this.handlePlay();\r\n    }\r\n    if (request === \"clearWalls\") {\r\n      this.handleClearWalls();\r\n    }\r\n    if (request === \"clearDust\") {\r\n      this.handleClearDust();\r\n    }\r\n    if (configLoaded) {\r\n      this.applyNodesStyles({\r\n        removeWalls: true,\r\n        removeDust: true,\r\n        setWalls: true,\r\n        setDust: true,\r\n      });\r\n      this.context.updateState(\"configLoaded\", false);\r\n    }\r\n    if (request === \"highlightMap\") {\r\n      this.applyNodesStyles({ setHighlight: true });\r\n    }\r\n    if (request === \"removeHighlightMap\") {\r\n      this.applyNodesStyles({ removeHighlight: true });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { grid } = this.context.state;\r\n    return (\r\n      <>\r\n        <Playback\r\n          onReset={this.handleReset}\r\n          onPlay={this.handlePlay}\r\n          onSpeedChange={this.handleSpeedChanged}\r\n          onGridSizeChange={this.handleGridSizeChange}\r\n        />\r\n        <div className=\"grid\">\r\n          {grid.map((row, rowIndex) => (\r\n            <div key={rowIndex} className=\"row\">\r\n              {row.map((node) => {\r\n                const { row, col } = node;\r\n                return (\r\n                  <Node\r\n                    key={`node-${row}-${col}`}\r\n                    ref={`node-${row}-${col}`}\r\n                    row={row}\r\n                    col={col}\r\n                    isStart={this.context.isStartNode(row, col)}\r\n                    onMouseDown={this.handleMouseDown}\r\n                    onMouseEnter={this.handleMouseEnter}\r\n                    onMouseLeave={this.handleMouseLeave}\r\n                    onMouseUp={this.handleMouseUp}\r\n                  ></Node>\r\n                );\r\n              })}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  toolBar: {\r\n    position: \"relative\",\r\n    paddingRight: \"0\",\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n  editorBtn: {\r\n    color: \"white\",\r\n    marginRight: \"1em\",\r\n    \"&:hover\": {\r\n      color: \"#66FCF1 !important\",\r\n      background: \"#1f2833\",\r\n      borderColor: \"black !important\",\r\n      transition: \"all 0.4s ease 0s\",\r\n    },\r\n    \"&:disabled\": {\r\n      color: \"#424242 !important\",\r\n      background: \"#1f2833\",\r\n      borderColor: \"black !important\",\r\n      transition: \"all 0.4s ease 0s\",\r\n    },\r\n  },\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    boxShadow: theme.shadows[5],\r\n  },\r\n  msgBtn: {\r\n    marginBottom: 0,\r\n    fontWeight: 500,\r\n  },\r\n\r\n  popover: {\r\n    pointerEvents: \"none\",\r\n  },\r\n  popoverText: {\r\n    padding: \"5px\",\r\n  },\r\n}));\r\n\r\nexport const Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"down\" ref={ref} {...props} />;\r\n});\r\n","import React from \"react\";\r\n\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\n\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { hybrid } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst Descriptor = ({ name, snippet, description, descriptionElementRef }) => {\r\n  return (\r\n    <DialogContentText\r\n      id=\"scroll-dialog-description\"\r\n      ref={descriptionElementRef}\r\n      tabIndex={-1}\r\n      style={{ width: \"55em\", outline: \"none\" }}\r\n    >\r\n      <Typography>\r\n        <strong>{`${name}:`}</strong>\r\n      </Typography>\r\n      <SyntaxHighlighter\r\n        customStyle={{ borderRadius: \"5px\" }}\r\n        language=\"javascript\"\r\n        showLineNumbers\r\n        style={hybrid}\r\n      >\r\n        {snippet}\r\n      </SyntaxHighlighter>\r\n      <Typography>{description}</Typography>\r\n    </DialogContentText>\r\n  );\r\n};\r\n\r\nexport default Descriptor;\r\n","export default [\r\n  {\r\n    name: \"Node\",\r\n    snippet: `const grid[i][j] = {\r\n  row: number, \r\n  col: number,\r\n  dust: number,\r\n  isWall: boolean, \r\n  isMapped: boolean,        /*indicates if we visited this node in any of the previous mapping runs*/\r\n  isVisited: boolean,       /*control variable for graph path finding algorithms*/\r\n  distance: number          /*a variable which can be used in graph path finding algorithms*/\r\n  heuristicDistance: number /*a variable which is used in astar algorithm*/\r\n  previousNode: node        /*a variable which is used in several path finding algorithms, to track paths\r\n}`,\r\n    description: `\r\n        The 'Node' parameter is an object which represents the basic unit which composes the house that the robot can traverse.\r\n        We provided several functions to extract information from a 'Node' object, which will be described under the \"Functions\"\r\n        portion of the API.\r\n        `,\r\n  },\r\n  {\r\n    name: \"Grid\",\r\n    snippet: \"const grid = [[...row1.nodes],[...row2.nodes],...]\",\r\n    description: `\r\n        The 'Grid' parameter is a 2-dimensional array of node objects.\r\n        It represents the structure of the house which the robot can traverse.\r\n        In the context of our algorithms, we use it to simulate the Robot's sensors,\r\n        and we take the walls and dust information from the nodes in it.\r\n        `,\r\n  },\r\n  {\r\n    name: \"Map\",\r\n    snippet: \"const map = [[...row1.nodes],[...row2.nodes],...]\",\r\n    description: `\r\n        The 'Map' parameter is a 2-dimensional array of node objects.\r\n        It represents the portion of the house that the robot has already traveresed, under \"MAP\" simulation type.\r\n        The map is always continious, because it is calculated based on legal previous mapping paths.\r\n        We use the map in order to simulate the Robot's \"brain\", meaning that in every \"SWEEP\" simulation we want to respect the nodes \r\n        [isMapped] property, and only allow traversing over mapped nodes.\r\n        `,\r\n  },\r\n  {\r\n    name: \"Docking Station\",\r\n    snippet: `const dockingStation = {\r\n  ...Node,\r\n  row: /*current starting position row*/\r\n  col: /*current starting position col*/\r\n}`,\r\n    description: `\r\n        The 'Docking Station' parameter is a 'Node' reference object which corresponds to the current position of the docking station on the UI.\r\n        The Robot must start his path from this node and return to it to recharge, before it runs out of battery.\r\n        `,\r\n  },\r\n  {\r\n    name: \"Available Steps\",\r\n    snippet: `console.log(typeof availableSteps); /*number*/\r\nconsole.log(number >= 0 && number <= grid.length * grid[0].length); /*true*/`,\r\n    description: `\r\n        This variable correlates to the battery percentage which was set by the user, and represents the number of nodes that the robot can traverse\r\n        before running out of battery. In the context of the code, it's the upper limit of the returned path length.\r\n        `,\r\n  },\r\n];\r\n","export default [\r\n  {\r\n    name: \"boolean isEqual(node1, node2)\",\r\n    snippet: `console.log(isEqual(grid[0][0], grid[0][0])) /*true*/\r\nconsole.log(isEqual(grid[0][0], grid[0][2])) /*false*/\r\nconsole.log(isEqual(grid[0][0], map[0][0])) /*true*/`,\r\n    description: `\r\n          Performs a check if 2 nodes are identical with respect to their 'row' and 'col' values.\r\n          Comparing with === might be problematic because the variables are copied by value with every \r\n          function call.\r\n    `,\r\n  },\r\n  {\r\n    name: \"boolean isNeighbors(node1, node2)\",\r\n    snippet: `console.log(isNeighbors(grid[0][0], grid[0][1])) /*true*/\r\nconsole.log(isNeighbors(grid[0][0], grid[0][2])) /*false*/\r\nconsole.log(isNeighbors(grid[1][5], grid[1][5])) /*true*/`,\r\n    description: `\r\n          The 'isNeighbors' functions is used check if two nodes are neighbors.\r\n          It can be used, for example, to validate the path before returning it to check if\r\n          there are illegal non-adjacent nodes in it.\r\n    `,\r\n  },\r\n  {\r\n    name: \"[...nodes] getNeighbors(node, grid)\",\r\n    snippet: `let neighbors = getNeighbors(map[i][j], map);\r\nneighbors = neighbors.filter(neighbor => !neighbor.isWall && neighbours.isMapped);\r\n/*get all sweep traversable neighbors of node[i][j] in the map.*/`,\r\n    description: `\r\n          This function retrieves, by value ,the adjacent nodes to any given node, with respect to the grid's dimensions.\r\n          Definition of adjacent nodes, for node[i][j]:\r\n\r\n          [node[i+1][j], node[i-1][j], node[i][j+1], node[i][j-1]].\r\n    `,\r\n  },\r\n  {\r\n    name: \"[...nodes] getAllNodes(grid)\",\r\n    snippet: `let nodes = getAllNodes(map);\r\nnodes.forEach(node=>{\r\n  /*do something...*/\r\n});`,\r\n    description: `\r\n         Spreads all the nodes to a 1-dimensional array representation. \r\n         The returned array contains copys of the original grid nodes.\r\n    `,\r\n  },\r\n  {\r\n    name: \"boolean isValidCoordinates(node, grid)\",\r\n    snippet: `console.log(isValidCoordinates(grid[100][100], grid));/*false*/\r\nconsole.log(isValidCoordinates(grid[0][5], grid));/*true*/`,\r\n    description: `\r\n         Checks if the given node row and col properties respects the grid dimensions.\r\n    `,\r\n  },\r\n  {\r\n    name: \"[[...grid[0]],...grid] getGridDeepCopy(grid)\",\r\n    snippet: `const temporaryGrid = getGridDeepCopy(grid);\r\nconsole.log(temporaryGrid===grid);/*false*/`,\r\n    description: `\r\n         Returns a deep copy of the grid for any use case.\r\n    `,\r\n  },\r\n  {\r\n    name: \"[...nodes] astar(grid, startNode, finishNode, ?filters)\",\r\n    snippet: `const path = astar(map, currNode, dockingStation, \r\n    [{attribute: \"isVisited\", evaluation: false}, \r\n    {attribute: \"isWall\", evaluation: false},\r\n    {attribute: \"isMapped\", evaluation: true}]);\r\nif(path){\r\n  /*...*/\r\n}`,\r\n    description: `\r\n         Performs an astar search from 'startNode' to 'finishNode'.\r\n         'filters' indicates the properties which we filter out each node neighbors by. if its not defined, the default is to look only at nodes which\r\n         are not visited yet and are not walls.\r\n         The returned value is an array of nodes which forms the shortest path found from 'startNode' to 'finishNode'.\r\n         in case no path was found, the function returns false.\r\n    `,\r\n  },\r\n  {\r\n    name: \"[...[...grid[0], grid] resetGridSearchProperties(grid)\",\r\n    snippet: `const path = astar(grid, grid[i][j], grid[k][p]);\r\nif(path){\r\n  /*...*/\r\n}\r\ngrid = resetGridSearchProperties(grid);`,\r\n    description: `\r\n           This function can be used to facilitate repeated searches that uses the properties {isVisited, distance, heuristicDistance, previousNode} \r\n           of the nodes. astar uses it internally to return a \"clean\" grid, so it's not required in conjunction with it, but can be used \r\n           when implementing other graph traversal algorithms.\r\n      `,\r\n  },\r\n  {\r\n    name:\r\n      \"[...nodes] fillPathGapsInNodeList(map, nodeList, visitedNodesInOrder, ?filters)\",\r\n    snippet: `const visitedNodesInOrder = [];\r\nconst bfsResult = breadthTraversal(map, startNode, availableSteps);\r\nvisitedNodesInOrder = fillPathGapsInNodeList(map, bfsResult, visitedNodesInOrder, \r\n      [{attribute: \"isVisited\", evaluation: false}, \r\n      {attribute: \"isWall\", evaluation: false},\r\n      {attribute: \"isMapped\", evaluation: true}]);\r\nreturn visitedNodesInOrder;`,\r\n    description: `\r\n           This function calls astar internally in order to fill gaps in a node list, by inserting paths between any 'nodeList' adjacent nodes, which\r\n           are not neighbors in the grid. returns a continious list of by-value copied nodes.\r\n      `,\r\n  },\r\n  {\r\n    name: \"[...nodes] removeDuplicateNodes(path)\",\r\n    snippet: `const path = pathWithDuplicateAdjacentNodes;\r\npath = removeDuplicateNodes(path)`,\r\n    description: `\r\n    This function searches for 'path' adjacent nodes which are identical and removes all the consequetive occurences of that node. \r\n    returns a list of by-value copied nodes.\r\n      `,\r\n  },\r\n  {\r\n    name: \"[...array] shuffle(array)\",\r\n    snippet: `const neighbors = getNeighbors(currNode).filter(node => !node.isWall);\r\nneighbors = shuffle(neighbors);\r\n/*...*/`,\r\n    description: `\r\n    Shuffles an array and returns a copy of it, shuffled.\r\n    In our context it's used to force different patterns of traversals for our determinstic algorithms.\r\n    Without shuffling, the order of the neighbors in the returned array is always the same, which can cause similair behavior between different\r\n    runs of the same traversal algorithm.\r\n      `,\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport Draggable from \"react-draggable\";\r\nimport dragCursor from \"../../../assets/cursors/move.cur\";\r\n\r\nexport const PaperComponent = (props) => {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default makeStyles((theme) => ({\r\n  topTitle: { textAlign: \"center\" },\r\n  dialogTitle: { cursor: `url(${dragCursor}), pointer`, textAlign: \"center\" },\r\n}));\r\n","import React from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport DraggableDialogStyles, {\r\n  PaperComponent,\r\n} from \"./DialogContainer.Styles.jsx\";\r\n\r\nconst useStyles = DraggableDialogStyles;\r\n\r\nconst DialogContainer = ({ title, showDialog, setShowDialog, children }) => {\r\n  const classes = useStyles();\r\n  const handleClose = () => {\r\n    setShowDialog(false);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={Boolean(showDialog)}\r\n      PaperComponent={PaperComponent}\r\n      scroll=\"paper\"\r\n      maxWidth=\"md\"\r\n      fullWidth\r\n      aria-labelledby=\"scroll-dialog-title\"\r\n      aria-describedby=\"scroll-dialog-description\"\r\n    >\r\n      <DialogTitle\r\n        id=\"draggable-dialog-title\"\r\n        className={classes.dialogTitle}\r\n        disableTypography\r\n      >\r\n        <Typography variant=\"h4\" className={classes.topTitle}>\r\n          {title}\r\n        </Typography>\r\n      </DialogTitle>\r\n      {children}\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          DISMISS\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default DialogContainer;\r\n","import React from \"react\";\r\n\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Descriptor from \"./Descriptor.jsx\";\r\nimport parameters from \"./parameters\";\r\nimport functions from \"./functions\";\r\n\r\nimport DialogContainer from \"../DialogContainer/DialogContainer\";\r\nimport APIDescriptorStyles from \"./APIDescriptor.Styles.jsx\";\r\n\r\nconst useStyles = APIDescriptorStyles;\r\n\r\nconst APIDescriptor = ({ showAPI, setShowAPI }) => {\r\n  const classes = useStyles();\r\n  const descriptionElementRef = React.useRef(null);\r\n  React.useEffect(() => {\r\n    if (showAPI) {\r\n      const { current: descriptionElement } = descriptionElementRef;\r\n      if (descriptionElement !== null) {\r\n        descriptionElement.focus();\r\n      }\r\n    }\r\n  }, [showAPI]);\r\n\r\n  return (\r\n    <DialogContainer\r\n      title={\"API Description\"}\r\n      setShowDialog={setShowAPI}\r\n      showDialog={showAPI}\r\n    >\r\n      <DialogContent dividers>\r\n        <Typography variant=\"h6\">Parameters:</Typography>\r\n        <Divider className={classes.divider} variant=\"inset\" />\r\n        {parameters.map((param) => (\r\n          <Descriptor\r\n            key={param.name}\r\n            name={param.name}\r\n            snippet={param.snippet}\r\n            description={param.description}\r\n            descriptionElementRef={descriptionElementRef}\r\n          />\r\n        ))}\r\n\r\n        <Typography variant=\"h6\">Functions:</Typography>\r\n        <Divider className={classes.divider} variant=\"inset\" />\r\n        {functions.map((func) => (\r\n          <Descriptor\r\n            key={func.name}\r\n            name={func.name}\r\n            description={func.description}\r\n            snippet={func.snippet}\r\n            descriptionElementRef={descriptionElementRef}\r\n          />\r\n        ))}\r\n      </DialogContent>\r\n    </DialogContainer>\r\n  );\r\n};\r\n\r\nexport default APIDescriptor;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  divider: { marginLeft: 0, marginBottom: \"1em\" },\r\n}));\r\n","import React from \"react\";\r\n\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\r\n\r\nimport messageStyles from \"./Message.Styles\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = messageStyles;\r\n\r\nconst Message = ({\r\n  message,\r\n  setMessage,\r\n  onClose,\r\n  topTitle,\r\n  bottomTitle,\r\n  variant,\r\n  severity,\r\n  dismissable,\r\n  animationDelay,\r\n  children,\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Modal\r\n      className={classes.modal}\r\n      open={Boolean(message)}\r\n      onClose={() => {\r\n        setMessage(\"\");\r\n        onClose && onClose();\r\n      }}\r\n      disableEnforceFocus\r\n      disableAutoFocus\r\n      disableBackdropClick={dismissable}\r\n      disableEscapeKeyDown={dismissable}\r\n      closeAfterTransition\r\n      BackdropComponent={Backdrop}\r\n      BackdropProps={{\r\n        timeout: 500,\r\n      }}\r\n    >\r\n      <Fade in={Boolean(message)} timeout={{ enter: animationDelay, exit: 0 }}>\r\n        <div className={classes.paper}>\r\n          <Alert\r\n            classes={{ icon: classes.alertIcon }}\r\n            variant={variant}\r\n            severity={severity}\r\n          >\r\n            <AlertTitle className={classes.alert}>\r\n              <Typography variant=\"h5\">{topTitle}</Typography>\r\n            </AlertTitle>\r\n            {message}\r\n            {children}\r\n            <Typography variant=\"h6\">{bottomTitle}</Typography>\r\n          </Alert>\r\n        </div>\r\n      </Fade>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    whiteSpace: \"pre-line\",\r\n  },\r\n  paper: {\r\n    boxShadow: theme.shadows[5],\r\n    outline: \"none\",\r\n  },\r\n  alertIcon: {\r\n    paddingTop: \"12px\",\r\n  },\r\n}));\r\n","import React, { useState, useContext } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\r\n\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\r\n\r\nimport GlobalContext from \"../../../Context/global-context\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    \"& > *\": {\r\n      borderBottom: \"unset\",\r\n    },\r\n  },\r\n});\r\n\r\n//prettier-ignore\r\nconst DataRow = ({ row, onBenchmarkReplay }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const classes = useStyles();\r\n  const context = useContext(GlobalContext);\r\n  const {convertAvailableStepsToBatteryCapacity} = context;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow className={classes.root}>\r\n        <TableCell>\r\n          <IconButton\r\n            aria-label=\"expand row\"\r\n            size=\"small\"\r\n            onClick={() => setOpen(!open)}\r\n          >\r\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell align=\"left\" component=\"th\" scope=\"row\">{row.name}</TableCell>\r\n        <TableCell align=\"right\">{row.avgRuntime}ms</TableCell>\r\n        <TableCell align=\"right\">{row.avgEfficiency}%</TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={4}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box margin={1}>\r\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                Configurations\r\n              </Typography>\r\n              <Table size=\"small\" aria-label=\"purchases\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell align=\"left\">NAME</TableCell>\r\n                    <TableCell align=\"left\">DIMENSIONS</TableCell>\r\n                    <TableCell align=\"right\">BATTERY</TableCell>\r\n                    <TableCell align=\"right\">RUNTIME</TableCell>\r\n                    <TableCell align=\"right\">EFFICIENCY</TableCell>\r\n                    <TableCell align=\"right\">REPLAY</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {row.configs.map(({configName, dimensions, runtime, efficiency,path, battery, config}) => (\r\n                    <TableRow key={configName}>\r\n                      <TableCell align=\"left\">{configName}</TableCell>\r\n                      <TableCell align=\"left\">{dimensions}</TableCell>\r\n                      <TableCell align=\"right\">{convertAvailableStepsToBatteryCapacity(config.grid,battery)}%</TableCell>\r\n                      <TableCell align=\"right\">{runtime}</TableCell>\r\n                      <TableCell align=\"right\">{efficiency}%</TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <IconButton onClick={()=>{onBenchmarkReplay(path, config)}}>\r\n                          <PlayCircleOutlineIcon/>\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default DataRow;\r\n","import React from \"react\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nimport DialogContainer from \"../DialogContainer/DialogContainer\";\r\n\r\nimport DataRow from \"./DataRow\";\r\n\r\nconst Benchmark = ({ showBenchmark, setShowBenchmark, onBenchmarkReplay }) => {\r\n  /* renaming for readibility, this variable behaves as a conditional for displaying the benchmark, \r\n  and contains the data itself when Benchmark is requested. */\r\n  const data = showBenchmark;\r\n  return (\r\n    <DialogContainer\r\n      showDialog={showBenchmark}\r\n      setShowDialog={setShowBenchmark}\r\n      title={`Benchmark`}\r\n    >\r\n      <TableContainer component=\"div\">\r\n        <Table size=\"medium\" aria-label=\"collapsible table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell />\r\n              <TableCell align=\"left\">Algorithm</TableCell>\r\n              <TableCell align=\"right\">Average Runtime</TableCell>\r\n              <TableCell align=\"right\">Average Efficiency</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map((algData) => (\r\n              <DataRow\r\n                key={`${algData.name}`}\r\n                row={algData}\r\n                onBenchmarkReplay={onBenchmarkReplay}\r\n              />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </DialogContainer>\r\n  );\r\n};\r\n\r\nexport default Benchmark;\r\n","export const INFO_MSG = `This platform allows you to implement your own method to traverse the grid.\r\nYou are required to create and return an 'Array' object which represents the path that the robot will take.\r\nThe path must meet the following requirements:\r\n\r\n1. Every element in the array must be a node reference from the 'map' parameter.\r\n2. The path must start and end with the docking station node which is given as a parameter.\r\n3. The number of elements in the array must be of value 'availableSteps' at most.\r\n\r\n`;\r\n\r\nexport const SUCCESS_MSG = `Well done!\r\nYou can now compare your code to our pre-defined algorithms by \r\nclicking 'Benchmark', or simulate a run on the current configuration \r\nby clicking 'Run'.`;\r\n\r\nexport const WARNING_MSG = `Are you sure you want to restore code back to default?`;\r\n\r\nexport const TIME_LIMIT_EXCEEDED = `Time limit exceeded, check for infinite loops or performance bottlenecks!`;\r\n\r\nexport const NO_BATTERY = `Please charge the robot's battery before attempting to validate the code!`;\r\n\r\nexport const COMPILATION_FAILED = `'Babel' Code compilation failed.\r\nCheck your code for syntax errors, and verify that you are connected to the internet!`;\r\n\r\nexport const VALIDATE_RETURN_TYPE = (\r\n  result\r\n) => `Invalid return type: ${typeof result}. \r\nreturn type 'Array' is required.`;\r\nexport const VALIDATE_EMPTY_ARRAY = `Returned array must not be empty.`;\r\nexport const VALIDATE_GRID_NODES = (elem, i) =>\r\n  `Array[${i}] is of type '${\r\n    elem === null ? \"null\" : Array.isArray(elem) ? \"Array\" : typeof elem\r\n  }'.`;\r\n\r\nexport const VALIDATE_PROPERTIES = (i) => `Invalid properties in Array[${i}].`;\r\nexport const VALIDATE_COORDINATES = (i) =>\r\n  `Invalid coordinates in Array[${i}].`;\r\nexport const VALIDATE_NON_ADJACENT = (currNode, prevNode, i) => `Invalid path.\r\n  Non-adjacent nodes detected at indices [${i - 1}], [${i}].\r\n\r\n  Array[${i - 1}] = [${prevNode.row}, ${prevNode.col}]\r\n  Array[${i}] = [${currNode.row}, ${currNode.col}]`;\r\n\r\nexport const VALIDATE_WALL = (node) =>\r\n  `Wall node found at location [${node.row}, ${node.col}]. Path must include accessible nodes only!`;\r\nexport const VALIDATE_ACYCLIC_FIRST = (\r\n  firstNode,\r\n  startNode\r\n) => `Invalid starting position. \r\n  Path must start from the docking station. \r\n\r\n Expected starting position: [${startNode.row},${startNode.col}] \r\n Received starting position: [${firstNode.row},${firstNode.col}]`;\r\n\r\nexport const VALIDATE_ACYCLIC_LAST = (\r\n  lastNode,\r\n  startNode\r\n) => `Invalid ending position. \r\n Path must end in the docking station, \r\n\r\nExpected ending position: [${startNode.row},${startNode.col}] \r\nReceived ending position: [${lastNode.row},${lastNode.col}]`;\r\n","export default class Stack {\r\n  constructor() {\r\n    this.items = [];\r\n  }\r\n  push(item) {\r\n    this.items.push(item);\r\n  }\r\n  pop() {\r\n    return this.items.length ? this.items.pop() : null;\r\n  }\r\n  peek() {\r\n    return this.items.length ? this.items[this.items.length - 1] : null;\r\n  }\r\n  isEmpty() {\r\n    return this.items.length === 0;\r\n  }\r\n  printStack() {\r\n    this.items.forEach((item) => console.log(item));\r\n  }\r\n\r\n  isIn(itemToBeChecked) {\r\n    return this.items.includes(itemToBeChecked);\r\n  }\r\n}\r\n","import {\r\n  getAllNodes,\r\n  getNeighbors,\r\n  MAX_DISTANCE,\r\n  isEqual,\r\n  getShortestPathNodesInOrder,\r\n  resetGridSearchProperties,\r\n} from \"./algorithmUtils\";\r\n\r\nimport Stack from \"../Classes/Stack.js\";\r\n\r\nexport const bfs = (grid, startNode, finishNode) => {\r\n  startNode.distance = 0;\r\n  const unvisitedNodes = getAllNodes(grid);\r\n  const visitedNodesInOrder = [];\r\n  while (unvisitedNodes.length) {\r\n    sortNodesByDistance(unvisitedNodes);\r\n    const closestNode = unvisitedNodes.shift();\r\n    if (closestNode.isWall) continue;\r\n    //need to find more elegant way to work on a copy of the array, maybe move grid to 1d array instead of 2d.\r\n    if (closestNode.distance === MAX_DISTANCE) {\r\n      visitedNodesInOrder.forEach((node) => (node.isVisited = false));\r\n      return visitedNodesInOrder;\r\n    }\r\n    closestNode.isVisited = true;\r\n    visitedNodesInOrder.push(closestNode);\r\n    //need to find more elegant way to work on a copy of the array, maybe move grid to 1d array instead of 2d.\r\n    if (closestNode === finishNode) {\r\n      visitedNodesInOrder.forEach((node) => (node.isVisited = false));\r\n      return getShortestPathNodesInOrder(finishNode);\r\n    }\r\n    updateUnvisitedNeighborsDistances(closestNode, grid);\r\n  }\r\n  return visitedNodesInOrder;\r\n};\r\n\r\nconst sortNodesByDistance = (unvisitedNodes) => {\r\n  unvisitedNodes.sort((nodeA, nodeB) => nodeA.distance - nodeB.distance);\r\n};\r\n\r\nconst updateUnvisitedNeighborsDistances = (node, grid) => {\r\n  let neighbors = getNeighbors(node, grid);\r\n  neighbors = neighbors.filter(\r\n    (neighbor) => !neighbor.isVisited && !neighbor.isWall\r\n  );\r\n  for (const neighbor of neighbors) {\r\n    neighbor.distance = node.distance + 1;\r\n    neighbor.previousNode = node;\r\n  }\r\n};\r\n\r\nexport const dfs = (grid, startNode) => {\r\n  const stack = new Stack();\r\n  const visitedNodesInOrder = [];\r\n  stack.push(startNode);\r\n  while (!stack.isEmpty()) {\r\n    const currNode = stack.pop();\r\n    if (currNode.isWall) continue;\r\n    if (!visitedNodesInOrder.includes(currNode))\r\n      visitedNodesInOrder.push(currNode);\r\n    let neighbors = getNeighbors(currNode, grid);\r\n    // priortize by is mapped first in\r\n    neighbors = neighbors.filter((neighbor) => !neighbor.isVisited);\r\n    neighbors.sort((n1, n2) => {\r\n      if (n1.isMapped) {\r\n        return -1;\r\n      } else {\r\n        return 1;\r\n      }\r\n    });\r\n\r\n    neighbors.forEach((neighbor) => {\r\n      if (!visitedNodesInOrder.includes(neighbor)) {\r\n        stack.push(neighbor);\r\n        neighbor.previousNode = currNode;\r\n      }\r\n    });\r\n  }\r\n\r\n  return visitedNodesInOrder;\r\n};\r\n\r\nexport const astar = (\r\n  grid,\r\n  startNode,\r\n  finishNode,\r\n  filters,\r\n  invokedFromEditor\r\n) => {\r\n  if (!filters) {\r\n    filters = [\r\n      { attribute: \"isVisited\", evaluation: false },\r\n      { attribute: \"isWall\", evaluation: false },\r\n    ];\r\n  }\r\n\r\n  const visitedNodesInOrder = [];\r\n\r\n  grid = invokedFromEditor ? invokedFromEditor.searchPropsResetter(grid) : grid;\r\n  !invokedFromEditor && resetGridSearchProperties(grid);\r\n\r\n  startNode.distance = 0;\r\n  startNode.heuristicDistance = 0;\r\n  const priorityQueue = [];\r\n  priorityQueue.push(startNode);\r\n  while (priorityQueue.length) {\r\n    sortNodesByHeuristicDistance(priorityQueue);\r\n    const closestNode = priorityQueue.shift();\r\n    closestNode.isVisited = true;\r\n    visitedNodesInOrder.push(closestNode);\r\n\r\n    if (isEqual(closestNode, finishNode)) {\r\n      /*       return finishNode; */\r\n      /* return visitedNodesInOrder; */\r\n\r\n      return getShortestPathNodesInOrder(closestNode);\r\n    }\r\n\r\n    let neighbors = getNeighbors(closestNode, grid);\r\n    neighbors = neighbors.filter((neighbor) => {\r\n      let res = true;\r\n      filters.forEach((filter) => {\r\n        const { attribute, evaluation } = filter;\r\n        if (neighbor[attribute] !== evaluation) {\r\n          res = false;\r\n        }\r\n      });\r\n      return res;\r\n    });\r\n\r\n    for (const neighbor of neighbors) {\r\n      //for single headed path visualization don't add weight to closestNode.distance.\r\n      let tentativeWeightedDistance = closestNode.distance + 1; //+closestNode.weight\r\n      if (tentativeWeightedDistance < neighbor.distance) {\r\n        neighbor.distance = tentativeWeightedDistance;\r\n        neighbor.heuristicDistance =\r\n          neighbor.distance + manhattanDistance(neighbor, finishNode);\r\n        neighbor.previousNode = closestNode;\r\n        priorityQueue.push(neighbor);\r\n      }\r\n    }\r\n  }\r\n  console.log(\r\n    `failed to find path from node-${startNode.row}-${startNode.col} to node-${finishNode.row}-${finishNode.col} at astar.`\r\n  );\r\n  return false;\r\n};\r\n\r\nconst manhattanDistance = (node, finishNode) => {\r\n  //|x1-x2|+|y1-y2|\r\n  return (\r\n    Math.abs(node.col - finishNode.col) + Math.abs(node.row - finishNode.row)\r\n  );\r\n};\r\n\r\nconst sortNodesByHeuristicDistance = (unvisitedNodes) => {\r\n  unvisitedNodes.sort(\r\n    (nodeA, nodeB) => nodeA.heuristicDistance - nodeB.heuristicDistance\r\n  );\r\n};\r\n","import { astar } from \"./pathfindingAlgorithms\";\r\n\r\nexport const MAX_DISTANCE = 9999;\r\n\r\nexport const getShortestPathNodesInOrder = (finishNode) => {\r\n  const shortestPathInOrder = [];\r\n  let currentNode = finishNode;\r\n  if (!finishNode) {\r\n    console.log(\"bad param in getShortestPathNodesInOrder\");\r\n    return false;\r\n  }\r\n  while (currentNode !== null) {\r\n    shortestPathInOrder.unshift(currentNode);\r\n    currentNode = currentNode.previousNode ? currentNode.previousNode : null;\r\n  }\r\n  return shortestPathInOrder;\r\n};\r\n\r\nexport const getAllNodes = (grid) => {\r\n  return [].concat(...grid);\r\n};\r\n\r\nexport const isNeighbors = (node1, node2) => {\r\n  return (\r\n    (node1.row === node2.row && Math.abs(node1.col - node2.col) <= 1) ||\r\n    (node1.col === node2.col && Math.abs(node1.row - node2.row) <= 1)\r\n  );\r\n};\r\n\r\nexport const isValidCoordinates = (node, grid) => {\r\n  return (\r\n    node.row < grid.length &&\r\n    node.row >= 0 &&\r\n    node.col < grid[0].length &&\r\n    node.col >= 0\r\n  );\r\n};\r\n\r\nexport const getNeighbors = (node, grid) => {\r\n  const neighbors = [];\r\n  const { col, row } = node;\r\n  if (col > 0) neighbors.push(grid[row][col - 1]);\r\n  if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\r\n  if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\r\n  if (row > 0) neighbors.push(grid[row - 1][col]);\r\n  return neighbors;\r\n};\r\n\r\nexport const resetGridSearchProperties = (grid) => {\r\n  for (let row = 0; row < grid.length; row++) {\r\n    for (let col = 0; col < grid[0].length; col++) {\r\n      grid[row][col].previousNode = null;\r\n      grid[row][col].isVisited = false;\r\n      grid[row][col].distance = MAX_DISTANCE;\r\n      grid[row][col].heuristicDistance = MAX_DISTANCE;\r\n    }\r\n  }\r\n};\r\n\r\nexport const getGridDeepCopy = (grid) => {\r\n  const gridCopy = JSON.parse(JSON.stringify(grid));\r\n  resetGridSearchProperties(gridCopy);\r\n  return gridCopy;\r\n};\r\n\r\nexport const fillPathGapsInNodeList = (\r\n  map,\r\n  nodeList,\r\n  visitedNodesInOrder,\r\n  filters\r\n) => {\r\n  if (!filters) {\r\n    filters = [\r\n      { attribute: \"isVisited\", evaluation: false },\r\n      { attribute: \"isWall\", evaluation: false },\r\n    ];\r\n  }\r\n  for (let i = 0; i < nodeList.length; i++) {\r\n    const currNode = nodeList[i];\r\n    const prevNode = i > 0 ? nodeList[i - 1] : currNode;\r\n    if (!isNeighbors(currNode, prevNode)) {\r\n      const path = astar(map, prevNode, currNode, filters);\r\n      if (path) {\r\n        visitedNodesInOrder.push(...path);\r\n      } else {\r\n        console.log(\r\n          `could not fill path gap between node-${prevNode.row}-${prevNode.col} to node-${currNode.row}-${currNode.col}`\r\n        );\r\n      }\r\n    } else {\r\n      visitedNodesInOrder.push(currNode);\r\n    }\r\n  }\r\n};\r\n\r\nexport const removeDuplicateNodes = (path) => {\r\n  for (let i = 0; i < path.length - 1; i++) {\r\n    if (path[i] === path[i + 1]) {\r\n      path.splice(i, 1);\r\n    }\r\n  }\r\n};\r\n\r\nexport const shuffle = (array) => {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n};\r\n\r\nexport const adjList = (\r\n  grid,\r\n  filters = { attribute: \"isWall\", evaluation: false }\r\n) => {\r\n  const isValidNode = (node) => {\r\n    let res = true;\r\n    filters.forEach((filter) => {\r\n      const { attribute, evaluation } = filter;\r\n      if (node[attribute] !== evaluation) {\r\n        res = false;\r\n      }\r\n    });\r\n    return res;\r\n  };\r\n  const getWeight = (n1, n2) => {\r\n    return n1.isWall || n2.isWall || n1 === n2 ? null : n2.dust;\r\n  };\r\n  const adjList = {};\r\n  for (let i = 0; i < grid.length; i++) {\r\n    for (let j = 0; j < grid[0].length; j++) {\r\n      const node = grid[i][j];\r\n      if (isValidNode(node)) {\r\n        const edges = [];\r\n        const neighbors = getNeighbors(node, grid).filter((node) =>\r\n          isValidNode(node)\r\n        );\r\n        neighbors.forEach((neighbor) => {\r\n          edges.push({\r\n            u: node,\r\n            v: neighbor,\r\n            w: getWeight(node, neighbor),\r\n          });\r\n        });\r\n        shuffle(edges);\r\n        adjList[`${i}-${j}`] = edges;\r\n      }\r\n    }\r\n  }\r\n  return adjList;\r\n};\r\n\r\n//prettier-ignore\r\n\r\nexport const adjustRobotPathToBatteryAndInsertReturnPath = (visitedNodesInOrder,map,dockingStation,availableSteps,search = astar) => {\r\n  /* \r\n  visitedNodes is calculated regardless of battery size (using the algorithm callback).\r\n  we want to minimize the amount of iterations of this loop, so we start searching for a path\r\n  back to the docking station starting from the node that corresponds to our current battery, backwards,\r\n  until we find a complete path (mapping/sweeping + return to docking station).\r\n  */\r\n  const runningMap = getGridDeepCopy(map);\r\n\r\n  const startNodeRef = runningMap[dockingStation.row][dockingStation.col];\r\n  \r\n  const filters = [\r\n    {\r\n      attribute: \"isVisited\",\r\n      evaluation: false,\r\n    },\r\n    {\r\n      attribute: \"isWall\",\r\n      evaluation: false,\r\n    },\r\n    {\r\n      attribute: \"isMapped\",\r\n      evaluation: true,\r\n    },\r\n  ];\r\n\r\n  const visitedNodesConsideringBattery = visitedNodesInOrder.slice(0,availableSteps);\r\n\r\n  visitedNodesConsideringBattery.forEach((node) => (runningMap[node.row][node.col].isMapped = true));\r\n\r\n  for (let i = Math.min(availableSteps - 1,visitedNodesConsideringBattery.length - 1); i >= 1; i--) {\r\n    const node = runningMap[visitedNodesConsideringBattery[i].row][visitedNodesConsideringBattery[i].col];\r\n    const pathToDockingStation = search(runningMap, node, startNodeRef, filters);\r\n\r\n    if (pathToDockingStation && (pathToDockingStation.length + i <= availableSteps)) {\r\n        const robotPath = visitedNodesInOrder\r\n          .slice(0, i)\r\n          .concat(pathToDockingStation);\r\n        removeDuplicateNodes(robotPath);\r\n        return robotPath;\r\n      }\r\n  }\r\n  console.log(\r\n    \"error in adjustRobotPathToBatteryAndInsertReturnPath in GlobalContext\"\r\n  );\r\n  return false;\r\n};\r\n\r\nexport const isEqual = (node1, node2) => {\r\n  return node1.row === node2.row && node1.col === node2.col;\r\n};\r\n","import {\r\n  getAllNodes,\r\n  isNeighbors,\r\n  resetGridSearchProperties,\r\n  shuffle,\r\n  isEqual,\r\n  isValidCoordinates,\r\n  getNeighbors,\r\n  getGridDeepCopy,\r\n  fillPathGapsInNodeList,\r\n  adjustRobotPathToBatteryAndInsertReturnPath,\r\n  removeDuplicateNodes,\r\n} from \"../../Algorithms/algorithmUtils\";\r\nimport { astar } from \"../../Algorithms/pathfindingAlgorithms\";\r\n\r\n/*\r\nWe are wrapping the functions with INTERPRETER... version because the function is based on inplace modification of it's received parameter,\r\nbut modifying variables inplace is not fully supported by the interpreter. \r\nThe interpreter wraps every parameter with another object when sending it to a function in the scope, so the side effect is we must use \r\nby-value functions only.\r\nThe functions which are not by-reference based are exported in their original version.\r\n*/\r\n\r\nexport const INTERPRETER_resetGridSearchProperties = (grid) => {\r\n  resetGridSearchProperties(grid);\r\n  return grid;\r\n};\r\n\r\nexport const INTERPRETER_shuffle = (array) => {\r\n  shuffle(array);\r\n  return array;\r\n};\r\n\r\nexport const INTERPRETER_removeDuplicateNodes = (path) => {\r\n  removeDuplicateNodes(path);\r\n  return path;\r\n};\r\n\r\nexport const INTERPRETER_fillPathGapsInNodeList = (\r\n  map,\r\n  nodeList,\r\n  visitedNodesInOrder,\r\n  filters\r\n) => {\r\n  fillPathGapsInNodeList(map, nodeList, visitedNodesInOrder, filters);\r\n  return visitedNodesInOrder;\r\n};\r\n\r\nexport const INTERPRETER_astar = (grid, startNode, finishNode, filters) => {\r\n  return astar(grid, startNode, finishNode, filters, {\r\n    searchPropsResetter: INTERPRETER_resetGridSearchProperties,\r\n  });\r\n};\r\n\r\nexport const INTERPRETER_adjustRobotPathToBatteryAndInsertReturnPath = (\r\n  visitedNodesInOrder,\r\n  map,\r\n  dockingStation,\r\n  availableSteps\r\n) => {\r\n  return adjustRobotPathToBatteryAndInsertReturnPath(\r\n    visitedNodesInOrder,\r\n    map,\r\n    dockingStation,\r\n    availableSteps,\r\n    INTERPRETER_astar\r\n  );\r\n};\r\n\r\n//prettier-ignore\r\nexport default [\r\n  {name: getAllNodes.name, func: getAllNodes},\r\n  {name: isNeighbors.name, func: isNeighbors},\r\n  {name: isEqual.name, func: isEqual },\r\n  {name: isValidCoordinates.name, func: isValidCoordinates},\r\n  {name: getNeighbors.name, func: getNeighbors},\r\n  {name: getGridDeepCopy.name, func: getGridDeepCopy},\r\n  {name: shuffle.name, func: INTERPRETER_shuffle},\r\n  {name: adjustRobotPathToBatteryAndInsertReturnPath.name, func: INTERPRETER_adjustRobotPathToBatteryAndInsertReturnPath},\r\n  {name: astar.name, func: INTERPRETER_astar},\r\n  {name: resetGridSearchProperties.name, func: INTERPRETER_resetGridSearchProperties},\r\n  {name: fillPathGapsInNodeList.name, func: INTERPRETER_fillPathGapsInNodeList},\r\n  {name: removeDuplicateNodes.name, func: INTERPRETER_removeDuplicateNodes},\r\n];\r\n","import { dfs, bfs, astar } from \"./pathfindingAlgorithms\";\r\nimport {\r\n  getAllNodes,\r\n  getNeighbors,\r\n  resetGridSearchProperties,\r\n  isNeighbors,\r\n  isValidCoordinates,\r\n  fillPathGapsInNodeList,\r\n  adjustRobotPathToBatteryAndInsertReturnPath,\r\n  shuffle,\r\n} from \"./algorithmUtils\";\r\n\r\nexport const baseMap = (grid, map, dockingStation, availableSteps, step) => {\r\n  let i = 0;\r\n  const visitedNodesInOrder = [];\r\n\r\n  let [currNode, pathToBorderNode] = extendToMapCurrentBorder(\r\n    grid,\r\n    map,\r\n    dockingStation,\r\n    visitedNodesInOrder,\r\n    availableSteps\r\n  );\r\n\r\n  while (i < availableSteps - pathToBorderNode.length) {\r\n    visitedNodesInOrder.push(currNode);\r\n\r\n    currNode = step(currNode, map, grid);\r\n    currNode.visitCount = !currNode.visitCount ? 1 : currNode.visitCount + 1;\r\n    i++;\r\n  }\r\n\r\n  const robotPath = adjustRobotPathToBatteryAndInsertReturnPath(\r\n    visitedNodesInOrder,\r\n    map,\r\n    dockingStation,\r\n    availableSteps\r\n  );\r\n\r\n  return robotPath;\r\n};\r\n\r\nconst spiralMap = (grid, map, dockingStation, availableSteps) => {\r\n  const calculateSpiralTraversalOffsets = (grid, availableSteps) => {\r\n    const offsets = [];\r\n    let [row, col] = [0, 0];\r\n    let [dirRow, dirCol] = [0, -1];\r\n    let [numRows, numCols] = [grid.length, grid[0].length];\r\n    for (let i = 0; i < availableSteps; i++) {\r\n      if (\r\n        -numRows / 2 < row &&\r\n        row <= numRows / 2 &&\r\n        -numCols / 2 < col &&\r\n        col <= numCols / 2\r\n      ) {\r\n        offsets.push({\r\n          row,\r\n          col,\r\n        });\r\n      }\r\n      if (\r\n        row === col ||\r\n        (row < 0 && row === -col) ||\r\n        (row > 0 && row === 1 - col)\r\n      ) {\r\n        [dirRow, dirCol] = [-dirCol, dirRow];\r\n      }\r\n      [row, col] = [row + dirRow, col + dirCol];\r\n    }\r\n    return offsets;\r\n  };\r\n\r\n  const visitedNodesInOrder = [];\r\n\r\n  let [startNode, pathToBorderNode] = extendToMapCurrentBorder(\r\n    grid,\r\n    map,\r\n    dockingStation,\r\n    visitedNodesInOrder,\r\n    availableSteps\r\n  );\r\n\r\n  const offsets = calculateSpiralTraversalOffsets(\r\n    grid,\r\n    availableSteps - pathToBorderNode.length\r\n  );\r\n\r\n  const spiralOrderFromStartNode = [];\r\n  offsets.forEach((offset) => {\r\n    spiralOrderFromStartNode.push({\r\n      row: startNode.row + offset.row,\r\n      col: startNode.col + offset.col,\r\n    });\r\n  });\r\n\r\n  const gridDimensionsLimitedCoords = spiralOrderFromStartNode.filter(\r\n    (nodeCoord) => isValidCoordinates(nodeCoord, grid)\r\n  );\r\n\r\n  const accessibleNodes = bfs(map, dockingStation);\r\n\r\n  const accessibleNodesCoords = gridDimensionsLimitedCoords.filter(\r\n    (nodeCoord) => {\r\n      const { row, col } = nodeCoord;\r\n      return accessibleNodes.includes(map[row][col]);\r\n    }\r\n  );\r\n\r\n  const spiralOrderNodes = [];\r\n\r\n  accessibleNodesCoords.forEach((nodeCoord) => {\r\n    spiralOrderNodes.push(map[nodeCoord.row][nodeCoord.col]);\r\n  });\r\n\r\n  fillPathGapsInNodeList(map, spiralOrderNodes, visitedNodesInOrder);\r\n\r\n  const robotPath = adjustRobotPathToBatteryAndInsertReturnPath(\r\n    visitedNodesInOrder,\r\n    map,\r\n    dockingStation,\r\n    availableSteps\r\n  );\r\n\r\n  for (let i = 0; i < robotPath.length - 1; i++) {\r\n    if (!isNeighbors(robotPath[i], robotPath[i + 1])) {\r\n      console.log(\r\n        `iteration ${i} node-${robotPath[i].row}-${robotPath[i].col}, node-${\r\n          robotPath[i + 1].row\r\n        }-${robotPath[i + 1].col}`\r\n      );\r\n    }\r\n  }\r\n  return robotPath;\r\n};\r\n\r\nexport const randomOptimized = (currNode, map, grid) => {\r\n  const neighbors = getNeighbors(currNode, map).filter(\r\n    (neighbor) => !grid[neighbor.row][neighbor.col].isWall\r\n  );\r\n\r\n  /* shuffling neighbors to compensate for prioritizing certain paths \r\n  when dust is evenly distributed around the dockingStation (mostly went left and down) */\r\n\r\n  shuffle(neighbors);\r\n  const neighborsAscending = [...neighbors].sort(\r\n    (n1, n2) => n1.visitCount - n2.visitCount\r\n  );\r\n  const neighborsDescending = [...neighbors].sort(\r\n    (n1, n2) => n2.visitCount - n1.visitCount\r\n  );\r\n  const neighborsProbabilities = [];\r\n\r\n  const multipliers = [70, 20, 5, 5];\r\n  neighborsDescending.forEach((neighbor, i) => {\r\n    for (let count = 0; count <= multipliers[i]; count++) {\r\n      neighborsProbabilities.push(neighborsAscending[i]);\r\n    }\r\n  });\r\n\r\n  return neighborsProbabilities[\r\n    Math.floor(Math.random() * neighborsProbabilities.length)\r\n  ];\r\n};\r\n\r\nconst bestFirst = (currNode, map, grid) => {\r\n  const neighbors = getNeighbors(currNode, map).filter(\r\n    (neighbor) => !grid[neighbor.row][neighbor.col].isWall\r\n  );\r\n\r\n  const neighborsAscending = [...neighbors].sort(\r\n    (n1, n2) => n1.visitCount - n2.visitCount\r\n  );\r\n  return neighborsAscending[0];\r\n};\r\n\r\nconst extendToMapCurrentBorder = (\r\n  grid,\r\n  map,\r\n  dockingStation,\r\n  visitedNodesInOrder,\r\n  availableSteps\r\n) => {\r\n  const pathToBorderNode = plotPathToBorderNode(grid, map, dockingStation);\r\n  if (\r\n    isBorderNodeRequiredAndAccesible(\r\n      pathToBorderNode,\r\n      availableSteps,\r\n      dockingStation\r\n    )\r\n  ) {\r\n    visitedNodesInOrder.push(...pathToBorderNode);\r\n    const newStartingNode = pathToBorderNode[pathToBorderNode.length - 1];\r\n    return [newStartingNode, pathToBorderNode];\r\n  }\r\n  return [dockingStation, []];\r\n};\r\n\r\nconst isBorderNodeRequiredAndAccesible = (\r\n  pathToBorderNode,\r\n  availableSteps,\r\n  dockingStation\r\n) => {\r\n  return (\r\n    pathToBorderNode.length &&\r\n    availableSteps >= pathToBorderNode.length * 2 &&\r\n    dockingStation.isMapped\r\n  );\r\n};\r\n\r\nconst plotPathToBorderNode = (grid, map, dockingStation) => {\r\n  let pathToBufferNode = [];\r\n  const filters = [\r\n    {\r\n      attribute: \"isVisited\",\r\n      evaluation: false,\r\n    },\r\n    {\r\n      attribute: \"isWall\",\r\n      evaluation: false,\r\n    },\r\n    {\r\n      attribute: \"isMapped\",\r\n      evaluation: true,\r\n    },\r\n  ];\r\n  const unmappedAreaBufferNode = getRandomBufferNode(map, grid);\r\n  if (unmappedAreaBufferNode) {\r\n    pathToBufferNode = astar(\r\n      map,\r\n      dockingStation,\r\n      unmappedAreaBufferNode,\r\n      filters\r\n    );\r\n  }\r\n  resetGridSearchProperties(map);\r\n  return pathToBufferNode;\r\n};\r\n\r\nconst getRandomBufferNode = (map, grid) => {\r\n  const allNodes = getAllNodes(map);\r\n  const mappedNodes = allNodes.filter((node) => node.isMapped);\r\n  const unmappedMapAdjacentNodes = mappedNodes.filter((node) => {\r\n    const unmappedNeighbors = getNeighbors(node, grid).filter((neighbor) => {\r\n      const { row, col } = neighbor;\r\n      return !map[row][col].isMapped && !grid[row][col].isWall;\r\n    });\r\n    return unmappedNeighbors.length > 0;\r\n  });\r\n  return unmappedMapAdjacentNodes.length > 0\r\n    ? unmappedMapAdjacentNodes[\r\n        Math.floor(Math.random() * unmappedMapAdjacentNodes.length)\r\n      ]\r\n    : false;\r\n};\r\n\r\nconst depthMap = (grid, map, startNode, availableSteps) => {\r\n  const visitedNodesInOrder = [];\r\n\r\n  let [currStartNode, pathFromDockToStartNode] = extendToMapCurrentBorder(\r\n    grid,\r\n    map,\r\n    startNode,\r\n    visitedNodesInOrder,\r\n    availableSteps\r\n  );\r\n\r\n  availableSteps = availableSteps - pathFromDockToStartNode.length;\r\n\r\n  let dfsResult = dfs(map, currStartNode);\r\n\r\n  const robotPath = [];\r\n  fillPathGapsInNodeList(map, dfsResult, robotPath);\r\n\r\n  visitedNodesInOrder.push(...robotPath);\r\n\r\n  resetGridSearchProperties(map);\r\n  /*\r\n  we reset grid properties because adjustRobotPath... tries to deep copy the map it gets. after astar the previousNodes\r\n  in some nodes of the map are pointing to other nodes, so we actually deep copying much more objects then we intend to, \r\n  causing a huge unnessecary delay.\r\n   */\r\n  let visitedConsideringBattery = adjustRobotPathToBatteryAndInsertReturnPath(\r\n    visitedNodesInOrder,\r\n    map,\r\n    startNode,\r\n    availableSteps\r\n  );\r\n\r\n  return visitedConsideringBattery;\r\n};\r\n\r\nexport const data = [\r\n  {\r\n    name: \"Random Traversal\",\r\n    shortened: \"Random\",\r\n    func: (grid, map, dockingStation, availableSteps) =>\r\n      baseMap(grid, map, dockingStation, availableSteps, randomOptimized),\r\n  },\r\n  {\r\n    name: \"Best First Traversal\",\r\n    shortened: \"Best First\",\r\n    func: (grid, map, dockingStation, availableSteps) =>\r\n      baseMap(grid, map, dockingStation, availableSteps, bestFirst),\r\n  },\r\n  {\r\n    name: \"Spiral Traversal\",\r\n    shortened: \"Spiral\",\r\n    func: spiralMap,\r\n  },\r\n  {\r\n    name: \"Depth Traversal\",\r\n    shortened: \"Depth\",\r\n    func: depthMap,\r\n  },\r\n];\r\n","import { astar } from \"./pathfindingAlgorithms\";\r\nimport Stack from \"../Classes/Stack\";\r\nimport {\r\n  getNeighbors,\r\n  adjustRobotPathToBatteryAndInsertReturnPath,\r\n  shuffle,\r\n  adjList,\r\n} from \"./algorithmUtils\";\r\n\r\nconst findEulerCircuit = (grid, map, dockingStation, availableSteps) => {\r\n  const graph = adjList(map, [\r\n    { attribute: \"isWall\", evaluation: false },\r\n    { attribute: \"isMapped\", evaluation: true },\r\n  ]);\r\n  if (Object.keys(graph) === 0) return [];\r\n  const currPath = new Stack();\r\n  let currNode = dockingStation;\r\n\r\n  currPath.push(dockingStation);\r\n  const circuit = [];\r\n  while (!currPath.isEmpty()) {\r\n    const { row, col } = currNode;\r\n    if (graph[`${row}-${col}`].length > 0) {\r\n      currPath.push(currNode);\r\n      currNode = graph[`${row}-${col}`].pop().v;\r\n    } else {\r\n      circuit.push(currNode);\r\n      currNode = currPath.pop();\r\n    }\r\n  }\r\n\r\n  const robotPath = adjustRobotPathToBatteryAndInsertReturnPath(\r\n    circuit,\r\n    map,\r\n    dockingStation,\r\n    availableSteps\r\n  );\r\n  return robotPath;\r\n};\r\n\r\nconst greedyCleaning = (grid, map, dockingStation, availableSteps) => {\r\n  const isCleaningPossible = () => {\r\n    const neighbors = getNeighbors(dockingStation, map);\r\n    return (\r\n      neighbors.length && neighbors.filter((node) => node.isMapped).length > 0\r\n    );\r\n  };\r\n  const findBestCandidate = (currNode, robotPath, map) => {\r\n    const getLeastVisitedNode = (nodes) => {\r\n      let nodesByVisitCount = nodes.sort(\r\n        (n1, n2) => n1.visitCount - n2.visitCount\r\n      );\r\n      return nodesByVisitCount[0];\r\n    };\r\n    let neighbors = getNeighbors(currNode, map).filter(\r\n      (neighbour) => neighbour.isMapped\r\n    );\r\n    shuffle(neighbors);\r\n    const sortedNeighborsByWeight = neighbors.sort(\r\n      (neigbour1, neigbour2) => neigbour2.dust - neigbour1.dust\r\n    );\r\n    for (let i = 0; i < sortedNeighborsByWeight.length - 1; i++) {\r\n      if (sortedNeighborsByWeight[i].visitCount === 0) {\r\n        return sortedNeighborsByWeight[i];\r\n      }\r\n    }\r\n    return getLeastVisitedNode(neighbors);\r\n  };\r\n\r\n  const robotPath = [];\r\n  if (!isCleaningPossible()) return robotPath;\r\n\r\n  let currNode = dockingStation;\r\n  robotPath.push(currNode);\r\n  const filters = [\r\n    { attribute: \"isVisited\", evaluation: false },\r\n    { attribute: \"isWall\", evaluation: false },\r\n    { attribute: \"isMapped\", evaluation: true },\r\n  ];\r\n\r\n  while (true) {\r\n    const bestCandidate = findBestCandidate(currNode, robotPath, map);\r\n    let returnPath = astar(\r\n      map,\r\n      bestCandidate,\r\n      map[dockingStation.row][dockingStation.col],\r\n      filters\r\n    );\r\n\r\n    if (returnPath && returnPath.length + robotPath.length < availableSteps) {\r\n      robotPath.push(bestCandidate);\r\n      bestCandidate.visitCount++;\r\n    } else {\r\n      returnPath = astar(\r\n        map,\r\n        currNode,\r\n        map[dockingStation.row][dockingStation.col],\r\n        filters\r\n      );\r\n      robotPath.push(...returnPath);\r\n      break;\r\n    }\r\n    currNode = bestCandidate;\r\n  }\r\n\r\n  return robotPath;\r\n};\r\n\r\nexport const data = [\r\n  {\r\n    name: \"Greedy Cleaning\",\r\n    shortened: \"Greedy\",\r\n    func: greedyCleaning,\r\n  },\r\n  {\r\n    name: \"Euler Circuit Cleaning\",\r\n    shortened: \"Euler\",\r\n    func: findEulerCircuit,\r\n  },\r\n];\r\n","class Exception {\r\n  constructor(message) {\r\n    this.message = message;\r\n    this.name = \"Exception\";\r\n  }\r\n}\r\n\r\nexport default Exception;\r\n","import Exception from \"../../Classes/Exception\";\r\nimport {\r\n  isValidCoordinates,\r\n  isNeighbors,\r\n  isEqual,\r\n} from \"../../Algorithms/algorithmUtils\";\r\n\r\nimport * as MSG from \"./Message/messages\";\r\n\r\nconst validateReturnType = (result, context) => {\r\n  if (!Array.isArray(result)) {\r\n    throw new Exception(MSG.VALIDATE_RETURN_TYPE(result));\r\n  }\r\n};\r\n\r\nconst validateIsEmpty = (result, context) => {\r\n  if (result.length === 0) {\r\n    throw new Exception(MSG.VALIDATE_EMPTY_ARRAY);\r\n  }\r\n};\r\n\r\nconst validateIsGridNodes = (result, context) => {\r\n  const { grid } = context.state;\r\n  const isObject = (elem) => {\r\n    return typeof elem === \"object\" && !Array.isArray(elem) && elem !== null;\r\n  };\r\n\r\n  for (let [i, elem] of result.entries()) {\r\n    if (!isObject(elem)) {\r\n      throw new Exception(MSG.VALIDATE_GRID_NODES(elem, i));\r\n    } else {\r\n      if (!Number.isInteger(elem.row) || !Number.isInteger(elem.col)) {\r\n        throw new Exception(MSG.VALIDATE_PROPERTIES(i));\r\n      } else if (!isValidCoordinates(elem, grid)) {\r\n        throw new Exception(MSG.VALIDATE_COORDINATES(i));\r\n      }\r\n    }\r\n  }\r\n};\r\n//prettier-ignore\r\nconst validateContinuousPath = (result, context) => {\r\n  for (let i = 0; i < result.length; i++) {\r\n    const currNode = result[i];\r\n    const prevNode = i > 0 ? result[i - 1] : currNode;\r\n    if (!isNeighbors(currNode, prevNode) || (isEqual(currNode, prevNode) && i > 0)) {\r\n      throw new Exception(MSG.VALIDATE_NON_ADJACENT(currNode, prevNode, i));\r\n    }\r\n  }\r\n};\r\n\r\nconst validateStepLimitExceeded = (result, context) => {\r\n  return result.length <= context.state.availableSteps;\r\n};\r\n\r\nconst validateNoWalls = (result, context) => {\r\n  for (const node of result) {\r\n    if (node.isWall === true) {\r\n      throw new Exception(MSG.VALIDATE_WALL(node));\r\n    }\r\n  }\r\n};\r\n\r\nconst validateCyclicPath = (result, context) => {\r\n  const { startNode } = context.state;\r\n  const { isStartNode } = context;\r\n  const [firstNode, lastNode] = [result[0], result[result.length - 1]];\r\n\r\n  if (!isStartNode(firstNode.row, firstNode.col)) {\r\n    throw new Exception(MSG.VALIDATE_ACYCLIC_FIRST(firstNode, startNode));\r\n  }\r\n  if (!isStartNode(lastNode.row, lastNode.col)) {\r\n    throw new Exception(MSG.VALIDATE_ACYCLIC_LAST(lastNode, startNode));\r\n  }\r\n};\r\n\r\n/* \r\nThe order of validators is important:\r\nwe want the less demanding checks to be done first, so the editor would feel more responsive when throwing error messages\r\naccording to the failed test. furthermore, some of the checks are dependent on passing previous checks in order to finish.\r\nexported as array so we can iterate over the validators in the designated function.\r\n*/\r\nexport default [\r\n  validateReturnType,\r\n  validateIsEmpty,\r\n  validateIsGridNodes,\r\n  validateStepLimitExceeded,\r\n  validateCyclicPath,\r\n  validateNoWalls,\r\n  validateContinuousPath,\r\n];\r\n","export default class Robot {\r\n  constructor(grid) {\r\n    this.map = this.getInitialMap(grid);\r\n  }\r\n\r\n  getInitialMap = (grid) => {\r\n    let row, col;\r\n    const map = [];\r\n    for (row = 0; row < grid.length; row++) {\r\n      map.push([]);\r\n      for (col = 0; col < grid[0].length; col++) {\r\n        map[row].push({ ...grid[row][col] });\r\n        map[row][col].isMapped = false;\r\n        map[row][col].visitCount = 0;\r\n      }\r\n    }\r\n    return map;\r\n  };\r\n\r\n  syncMapLayoutWithGrid = (grid) => {\r\n    for (let row = 0; row < grid.length; row++) {\r\n      for (let col = 0; col < grid[0].length; col++) {\r\n        const gridNode = grid[row][col];\r\n        this.map[row][col].isWall = gridNode.isWall;\r\n        this.map[row][col].isMapped = gridNode.isWall\r\n          ? false\r\n          : this.map[row][col].isMapped;\r\n        this.map[row][col].dust = gridNode.dust;\r\n      }\r\n    }\r\n  };\r\n\r\n  updateMap = (path) => {\r\n    for (const node of path) {\r\n      const { row, col } = node;\r\n      this.map[row][col].isMapped = true;\r\n    }\r\n  };\r\n}\r\n","export const DEFAULT_EDITOR_MARKUP = `function buildPath(grid, map, dockingStation, availableSteps){\r\n\r\n  /*** EXAMPLE CODE: ***/\r\n  \r\n  const robotPath = [];\r\n  let i = 0;\r\n  let currNode = map[dockingStation.row][dockingStation.col];\r\n  while(i < availableSteps){\r\n    let neighbors = getNeighbors(map, currNode);\r\n    robotPath.push(findBestNeighbor(neighbors));\r\n    //...\r\n    i++;\r\n  }\r\n  \r\n\r\n}`;\r\n\r\nexport const EXECUTE = `buildPath(grid,map,dockingStation,availableSteps);`;\r\n","/* eslint-disable no-undef */\r\nimport Interpreter from \"js-interpreter\";\r\n\r\nimport scopeFunctions from \"./interpreterScope\";\r\nimport * as mappingAlgorithms from \"../../Algorithms/mappingAlgorithms\";\r\nimport * as cleaningAlgorithms from \"../../Algorithms/cleaningAlgorithms\";\r\n\r\nimport staticConfigs from \"./configs.json\";\r\n\r\nimport validators from \"./validators\";\r\nimport Exception from \"../../Classes/Exception\";\r\n\r\nimport {\r\n  TIME_LIMIT_EXCEEDED,\r\n  NO_BATTERY,\r\n  COMPILATION_FAILED,\r\n} from \"./Message/messages\";\r\n\r\nimport Robot from \"../../Classes/Robot\";\r\nimport { EXECUTE } from \"./code\";\r\n\r\nexport const createSandboxedInterpreter = (code, context) => {\r\n  const establishEnvironment = (context, interpreter) => {\r\n    const isPrimitive = (value) => Object(value) !== value;\r\n    const isBatteryEmpty = () =>\r\n      Math.floor((availableSteps / (grid.length * grid[0].length)) * 100) === 0;\r\n\r\n    const { grid, availableSteps, startNode } = context.state;\r\n    const { robot } = context;\r\n    if (isBatteryEmpty()) {\r\n      throw new Exception(NO_BATTERY);\r\n    }\r\n    robot.syncMapLayoutWithGrid(grid);\r\n    const scopeArgs = [\r\n      { name: \"grid\", value: grid },\r\n      { name: \"map\", value: robot.map },\r\n      {\r\n        name: \"dockingStation\",\r\n        value: robot.map[startNode.row][startNode.col],\r\n      },\r\n      { name: \"availableSteps\", value: availableSteps },\r\n    ];\r\n\r\n    scopeArgs.forEach((arg) => {\r\n      interpreter.setValueToScope(\r\n        arg.name,\r\n        isPrimitive(arg.value)\r\n          ? arg.value\r\n          : interpreter.nativeToPseudo(arg.value)\r\n      );\r\n    });\r\n\r\n    scopeFunctions.forEach((funcObj) => {\r\n      interpreter.setValueToScope(\r\n        funcObj.name,\r\n        interpreter.nativeToPseudo(funcObj.func)\r\n      );\r\n    });\r\n  };\r\n  const compileToES5 = (code) => {\r\n    const loadBabel = () => {\r\n      if (!window.Babel) {\r\n        loadScript(\"https://unpkg.com/@babel/standalone/babel.min.js\");\r\n      }\r\n    };\r\n    try {\r\n      loadBabel();\r\n      return Babel.transform(code, {\r\n        presets: [\"es2015\"],\r\n        sourceType: \"script\",\r\n      }).code;\r\n    } catch (err) {\r\n      throw new Exception(COMPILATION_FAILED);\r\n    }\r\n  };\r\n  try {\r\n    const interpreter = new Interpreter(compileToES5(code));\r\n    interpreter.appendCode(EXECUTE);\r\n    establishEnvironment(context, interpreter);\r\n    return interpreter;\r\n  } catch (err) {\r\n    throw new Exception(err.message);\r\n  }\r\n};\r\n\r\nexport const loadScript = (url, callback) => {\r\n  let script = document.createElement(\"script\");\r\n  script.type = \"text/javascript\";\r\n\r\n  if (script.readyState) {\r\n    //IE\r\n    script.onreadystatechange = function () {\r\n      if (script.readyState === \"loaded\" || script.readyState === \"complete\") {\r\n        script.onreadystatechange = null;\r\n        callback && callback();\r\n      }\r\n    };\r\n  } else {\r\n    //Others\r\n    script.onload = function () {\r\n      callback && callback();\r\n    };\r\n  }\r\n\r\n  script.src = url;\r\n  document.getElementsByTagName(\"head\")[0].appendChild(script);\r\n};\r\n\r\nexport const restrictEditingSegment = (editor) => {\r\n  editor.getSession().setMode({ path: \"ace/mode/javascript\", inline: true });\r\n  // Prevent editing first and last line of editor\r\n  editor.commands.on(\"exec\", function (e) {\r\n    const position = editor.selection.getCursor();\r\n    if (position.row === 0 || position.row + 1 === editor.session.getLength()) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n  });\r\n};\r\n\r\nexport const extendAutocomplete = (editor) => {\r\n  const funcProtoString = (funcObj) => {\r\n    const { name, func } = funcObj;\r\n    const parsedFunc = func.toString();\r\n    const args = parsedFunc.substring(0, parsedFunc.indexOf(\"=\") - 1);\r\n    const numArgs = args.split(\",\").length - 1;\r\n    const resArgs = numArgs ? args : `(${args})`;\r\n    return `${name}${resArgs};`;\r\n  };\r\n\r\n  const createWordsArray = (session, scopeFunctions, localKeywords) => [\r\n    ...scopeFunctions.map((funcObj) => {\r\n      return {\r\n        caption: funcObj.name,\r\n        value: funcProtoString(funcObj),\r\n        meta: \"function\",\r\n      };\r\n    }),\r\n    ...session.$mode.$highlightRules.$keywordList.map(function (word) {\r\n      return {\r\n        caption: word,\r\n        value: word,\r\n        meta: \"keyword\",\r\n      };\r\n    }),\r\n    ...localKeywords.map((word) => {\r\n      return {\r\n        caption: word,\r\n        value: word,\r\n        meta: \"local\",\r\n      };\r\n    }),\r\n  ];\r\n\r\n  const localKeywords = [\"grid\", \"map\", \"availableSteps\", \"dockingStation\"];\r\n  const autoComplete = {\r\n    getCompletions: (editor, session, pos, prefix, callback) => {\r\n      callback(null, createWordsArray(session, scopeFunctions, localKeywords));\r\n    },\r\n  };\r\n  editor.completers = [autoComplete];\r\n};\r\n\r\nexport const validate = (result, context) => {\r\n  for (const validator of validators) {\r\n    validator(result, context);\r\n  }\r\n};\r\n\r\nexport const getBenchmarkAlgorithms = (simulationType) => {\r\n  return simulationType === \"map\"\r\n    ? mappingAlgorithms.data\r\n    : cleaningAlgorithms.data;\r\n};\r\n\r\nexport const getBenchmarkConfigs = (simulationType) => {\r\n  const adjustMapToSimulationType = (map) => {\r\n    for (const node of map.flat()) {\r\n      node.isMapped = simulationType === \"sweep\" && !node.isWall ? true : false;\r\n    }\r\n  };\r\n  const addDummyRobotToConfig = (config) => {\r\n    /* \r\n  When first importing the configs.json file, we want to assign a dummy robot to each config so we can simulate execution of each algorithm\r\n  and configuration combination. a correct simulation is dependent on having a robot object in the context of the execution. \r\n  */\r\n    const { grid, map } = config;\r\n    const dummy = new Robot(grid);\r\n    dummy.map = map;\r\n    delete config.map;\r\n    config.robot = dummy;\r\n  };\r\n  const configs = JSON.parse(JSON.stringify(staticConfigs));\r\n  for (const config of Object.values(configs)) {\r\n    !config.robot && addDummyRobotToConfig(config);\r\n    config.robot.syncMapLayoutWithGrid(config.grid);\r\n    adjustMapToSimulationType(config.robot.map, simulationType);\r\n  }\r\n  return configs;\r\n};\r\n\r\n//prettier-ignore\r\nexport const measure = (algorithm, config, simulationType) => {\r\n  const runInterpreterCalculateRuntime = (algorithm, config) => {\r\n    const buildContextFromConfig = (config) => {\r\n      const { grid, robot, startNode, availableSteps } = config;\r\n      return { state: { grid, startNode, availableSteps }, robot };\r\n    };\r\n    const interpreter = createSandboxedInterpreter(\r\n      algorithm.code,\r\n      buildContextFromConfig(config)\r\n    );\r\n    const t0 = performance.now();\r\n    interpreter.run();\r\n    const t1 = performance.now();\r\n    const path = interpreter.pseudoToNative(interpreter.value);\r\n    return [path, (t1 - t0)/200];\r\n  };\r\n  const runNativeAlgorithmCalculateRuntime = (algorithm, config) => {\r\n    const { grid, robot, startNode, availableSteps } = config;\r\n    const {row, col} = startNode;\r\n    const dockingStation = robot.map[row][col];\r\n    const map = robot.map;\r\n    const t0 = performance.now();\r\n    const path = algorithm.func(grid,map,dockingStation,availableSteps);\r\n    const t1 = performance.now();\r\n\r\n    return [path, t1 - t0];\r\n  };\r\n  const calculateEfficiency = (path, config, simulationType) => {\r\n    const calcMappingEfficiency = (path, map) => {\r\n      /* \r\n      Calculates how much we have extended the previous map, meaning, how much new nodes has been added to the map, \r\n      in relation to the total unmapped nodes on the grid, when launching the algorithm. \r\n      */\r\n      const unmappedNodesCount = map.flat().filter((node) => !node.isMapped)\r\n        .length;\r\n\r\n      const uniqueNodesFromPath = path.filter(\r\n        (a, b, c) =>\r\n          c.findIndex((t) => t.row === a.row && t.col === a.col) === b\r\n      );\r\n\r\n      let mapExtendingNodes = uniqueNodesFromPath.filter(\r\n        (node) => !node.isMapped\r\n      );\r\n\r\n      return (mapExtendingNodes.length / unmappedNodesCount) * 100;\r\n    };\r\n    const calcSweepingEfficiency = (path, grid) => {\r\n      /* \r\n      Calculates how much dust did we clean in relation to the total amount of dust on the grid. \r\n      */\r\n     const uniqueNodesFromPath = path.filter(\r\n      (a, b, c) =>\r\n        c.findIndex((t) => t.row === a.row && t.col === a.col) === b\r\n    );\r\n      return (\r\n        uniqueNodesFromPath.reduce((a, b) => ({ dust: a.dust + b.dust })).dust /\r\n          grid.flat().reduce((a, b) => ({ dust: a.dust + b.dust })).dust *\r\n        100\r\n      );\r\n    };\r\n    const { grid, robot } = config;\r\n    return simulationType === \"sweep\"\r\n      ? calcSweepingEfficiency(path, grid)\r\n      : calcMappingEfficiency(path, robot.map);\r\n  };\r\n\r\n  const [path, runtime] =\r\n    algorithm.name === \"User Script\"\r\n      ? runInterpreterCalculateRuntime(algorithm, config)\r\n      : runNativeAlgorithmCalculateRuntime(algorithm, config);\r\n  return {\r\n    path,\r\n    runtime,\r\n    efficiency: calculateEfficiency(path, config, simulationType),\r\n  };\r\n};\r\n\r\nexport const transformScoresToBenchmarkData = (scores) => {\r\n  const calculateAverage = (alg, property) => {\r\n    const flattend = alg.map((row) => row.result[property]);\r\n    return flattend.reduce((a, b) => a + b) / alg.length;\r\n  };\r\n\r\n  return scores.map((algGroup) => {\r\n    return {\r\n      name: algGroup[0].algName,\r\n      avgRuntime: parseFloat(calculateAverage(algGroup, \"runtime\").toFixed(2)),\r\n      avgEfficiency: parseFloat(\r\n        calculateAverage(algGroup, \"efficiency\").toFixed(2)\r\n      ),\r\n      configs: algGroup.map((alg) => {\r\n        const { result, configName, config } = alg;\r\n        const { grid, availableSteps } = config;\r\n        return {\r\n          config,\r\n          configName,\r\n          dimensions: `${grid.length}X${grid[0].length}`,\r\n          battery: availableSteps,\r\n          runtime: parseFloat(result.runtime.toFixed(2)),\r\n          efficiency: parseFloat(result.efficiency.toFixed(2)),\r\n          path: result.path,\r\n        };\r\n      }),\r\n    };\r\n  });\r\n};\r\n\r\nexport const checkTimeLimitExceeded = (interpreter) => {\r\n  const start = new Date().getTime();\r\n  while (interpreter.step()) {\r\n    let now = new Date().getTime() - start;\r\n    let secondsPassed = Math.floor((now / 1000) % 60);\r\n    if (secondsPassed === 10) {\r\n      throw new Exception(TIME_LIMIT_EXCEEDED);\r\n    }\r\n  }\r\n};\r\n","/* eslint-disable no-undef */\r\nimport React, { useContext, useState, useRef } from \"react\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconClose from \"@material-ui/icons/Close\";\r\nimport IconSave from \"@material-ui/icons/GetApp\";\r\nimport IconLoad from \"@material-ui/icons/Publish\";\r\nimport IconSettings from \"@material-ui/icons/Settings\";\r\n\r\nimport editorStyles, { Transition } from \"./Editor.Styles\";\r\nimport APIDescriptor from \"./APIDescriptor/APIDescriptor\";\r\nimport Message from \"./Message/Message\";\r\nimport Benchmark from \"./Benchmark/Benchmark\";\r\n\r\nimport { handleCreateConfigurationsFile } from \"./configsHelper\";\r\n\r\nimport { INFO_MSG, SUCCESS_MSG, WARNING_MSG } from \"./Message/messages\";\r\n\r\nimport AceEditor from \"react-ace\";\r\n\r\nimport {\r\n  createSandboxedInterpreter,\r\n  checkTimeLimitExceeded,\r\n  restrictEditingSegment,\r\n  extendAutocomplete,\r\n  validate,\r\n  getBenchmarkAlgorithms,\r\n  getBenchmarkConfigs,\r\n  transformScoresToBenchmarkData,\r\n  measure,\r\n} from \"./editorUtils.js\";\r\n\r\nimport { DEFAULT_EDITOR_MARKUP } from \"./code\";\r\n\r\nimport GlobalContext from \"../../Context/global-context\";\r\n\r\nimport \"ace-builds/src-noconflict/mode-javascript\";\r\nimport \"ace-builds/src-noconflict/theme-monokai\";\r\nimport \"ace-builds/src-noconflict/ext-language_tools\";\r\n\r\nimport \"ace-builds/webpack-resolver\";\r\n\r\nconst useStyles = editorStyles;\r\n\r\nconst Editor = ({ open, setCodeEditorOpen }) => {\r\n  const classes = useStyles();\r\n\r\n  const context = useContext(GlobalContext);\r\n\r\n  const [firstMount, setFirstMount] = useState(true);\r\n  const [showError, setShowError] = useState(false);\r\n  const [showClearWarning, setShowClearWarning] = useState(false);\r\n  const [showSuccess, setShowSuccess] = useState(false);\r\n  const [showInfo, setShowInfo] = useState(INFO_MSG);\r\n  const [showAPI, setShowAPI] = useState(false);\r\n  const [showBenchmark, setShowBenchmark] = useState(false);\r\n\r\n  const [anchorElSaveScript, setAnchorSaveScript] = React.useState(null);\r\n  const [anchorElLoadScript, setAnchorElLoadScript] = React.useState(null);\r\n  const [\r\n    anchorElCreateConfigurationsFile,\r\n    setAnchorElCreateConfigurationsFile,\r\n  ] = React.useState(null);\r\n\r\n  const [validatedResult, setValidatedResult] = React.useState(false);\r\n\r\n  let ace = useRef(null);\r\n  let cache = useRef(null);\r\n\r\n  const { editorScript } = context.state;\r\n  /*\r\n  no need to deep copy, because strings management is probably managed with ref count, so code is detached from editorScript as soon as onChange\r\n  happens, and we avoid changing the state directly\r\n  */\r\n  let code = editorScript;\r\n\r\n  const onChange = (currentCode) => {\r\n    /* we dont want to set state on each change because it causes stuttering when typing*/\r\n    code = currentCode;\r\n  };\r\n\r\n  const handleClearButtonClick = () => {\r\n    context.updateState(\"editorScript\", code);\r\n    setShowClearWarning(WARNING_MSG);\r\n  };\r\n\r\n  const handleAPIButtonClick = () => {\r\n    context.updateState(\"editorScript\", code);\r\n    setShowAPI(true);\r\n  };\r\n\r\n  const handleInfoButtonClick = () => {\r\n    context.updateState(\"editorScript\", code);\r\n    setShowInfo(INFO_MSG);\r\n  };\r\n\r\n  const handleBenchmark = () => {\r\n    const isCachedBenchmarkAvailable = () => {\r\n      return cache?.current?.benchmark;\r\n    };\r\n    const cacheBenchmark = (scores) => {\r\n      cache.current = {\r\n        ...cache.current,\r\n        benchmark: transformScoresToBenchmarkData(scores),\r\n      };\r\n    };\r\n    if (isCachedBenchmarkAvailable()) {\r\n      setShowBenchmark(cache.current.benchmark);\r\n      return;\r\n    }\r\n    const { simulationType } = context.state;\r\n\r\n    const benchmarkAlgorithms = getBenchmarkAlgorithms(simulationType).concat([\r\n      { name: \"User Script\", code: code },\r\n    ]);\r\n    const benchmarkConfigs = getBenchmarkConfigs(simulationType);\r\n    const scores = [];\r\n    for (const [i, algorithm] of benchmarkAlgorithms.entries()) {\r\n      scores.push([]);\r\n      for (const [configName, config] of Object.entries(benchmarkConfigs)) {\r\n        scores[parseInt(i)].push({\r\n          algName: algorithm.name,\r\n          configName: `${configName}`,\r\n          config,\r\n          result: measure(algorithm, config, simulationType),\r\n        });\r\n      }\r\n    }\r\n    cacheBenchmark(scores);\r\n    setShowBenchmark(cache.current.benchmark);\r\n  };\r\n\r\n  const handleValidateScript = () => {\r\n    const cacheValidatedResult = (result) => {\r\n      cache.current = {\r\n        ...cache.current,\r\n        validatedResult: result,\r\n      };\r\n    };\r\n\r\n    const isCachedValidatedResultAvailable = () => {\r\n      return cache?.current?.validatedResult;\r\n    };\r\n\r\n    const { editorScript } = context.state;\r\n    if (code !== editorScript) {\r\n      context.updateState(\"editorScript\", code);\r\n      cache.current = null;\r\n    } else if (isCachedValidatedResultAvailable()) {\r\n      setShowSuccess(SUCCESS_MSG);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const interpreter = createSandboxedInterpreter(code, context);\r\n\r\n      checkTimeLimitExceeded(interpreter);\r\n\r\n      interpreter.run();\r\n\r\n      const result = interpreter.pseudoToNative(interpreter.value);\r\n\r\n      validate(result, context);\r\n\r\n      setShowSuccess(SUCCESS_MSG);\r\n\r\n      setValidatedResult(result);\r\n\r\n      cacheValidatedResult(result);\r\n    } catch (err) {\r\n      setShowError(err.message);\r\n      context.updateState(\"editorSimulation\", false);\r\n    }\r\n  };\r\n\r\n  const handleLoadUserScript = (event) => {\r\n    cache.current = null;\r\n    context.updateState(\"editorScript\", code);\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      const { editorScript } = JSON.parse(reader.result);\r\n      context.loadUserScript(editorScript);\r\n    };\r\n    reader.readAsText(event.target.files[0]);\r\n  };\r\n\r\n  const handleSaveUserScript = () => {\r\n    context.updateState(\"editorScript\", code, context.saveUserScript);\r\n  };\r\n\r\n  const handleCancelClearRequest = () => {\r\n    setShowClearWarning(false);\r\n  };\r\n\r\n  const handleConfirmClearRequest = () => {\r\n    setShowClearWarning(false);\r\n    code = DEFAULT_EDITOR_MARKUP;\r\n    context.updateState(\"editorScript\", code);\r\n  };\r\n\r\n  const handleRun = () => {\r\n    setTimeout(() => {\r\n      context.updateState(\"editorSimulation\", {\r\n        path: validatedResult,\r\n        type: \"user\",\r\n      });\r\n    }, 500);\r\n    setShowSuccess(false);\r\n    handleClose();\r\n  };\r\n\r\n  const handleDismiss = () => {\r\n    context.updateState(\"editorSimulation\", false);\r\n    setShowSuccess(false);\r\n  };\r\n\r\n  const handleBenchmarkReplay = (replay, config) => {\r\n    const adjustBenchmarkConfigToLoaderRequirements = (config) => {\r\n      const { map } = config.robot;\r\n      const { simulationType } = context.state;\r\n      return { ...config, map, simulationType };\r\n    };\r\n    const { loadConfiguration } = context;\r\n    context.updateState(\r\n      \"editorSimulation\",\r\n      { path: replay, type: \"replay\" },\r\n      loadConfiguration,\r\n      adjustBenchmarkConfigToLoaderRequirements(config)\r\n    );\r\n    setShowBenchmark(false);\r\n    setShowSuccess(false);\r\n    handleClose();\r\n  };\r\n\r\n  const handleClose = () => {\r\n    context.updateState(\"editorScript\", code);\r\n    cache.current = null;\r\n    setValidatedResult(false);\r\n    setCodeEditorOpen(false);\r\n  };\r\n\r\n  const handlePopoverOpen = (event) => {\r\n    switch (event.currentTarget.id) {\r\n      case \"btn-saveScript\":\r\n        setAnchorSaveScript(event.currentTarget);\r\n        break;\r\n      case \"btn-loadScript\":\r\n        setAnchorElLoadScript(event.currentTarget);\r\n        break;\r\n      case \"btn-createConfigurationsFile\":\r\n        setAnchorElCreateConfigurationsFile(event.currentTarget);\r\n        break;\r\n      default:\r\n        console.log(\"Default case entered in Editor.jsx: handlePopoverOpen\");\r\n    }\r\n  };\r\n\r\n  const handlePopoverClose = (event) => {\r\n    switch (event.currentTarget.id) {\r\n      case \"btn-saveScript\":\r\n        setAnchorSaveScript(null);\r\n        break;\r\n      case \"btn-loadScript\":\r\n        setAnchorElLoadScript(null);\r\n        break;\r\n      case \"btn-createConfigurationsFile\":\r\n        setAnchorElCreateConfigurationsFile(null);\r\n        break;\r\n      default:\r\n        console.log(\"Default case entered in Editor.jsx: handlePopoverClose\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar className={classes.toolBar}>\r\n            <IconButton\r\n              className={classes.editorBtn}\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <IconClose />\r\n            </IconButton>\r\n            <input\r\n              accept=\".json\"\r\n              className={classes.input}\r\n              id=\"icon-button-load-script\"\r\n              onChange={handleLoadUserScript}\r\n              onClick={(event) => {\r\n                //to allow consecutive selection of same files, we need to clear input value after each click.\r\n                event.target.value = \"\";\r\n              }}\r\n              type=\"file\"\r\n            />\r\n            <label htmlFor=\"icon-button-load-script\">\r\n              <IconButton\r\n                id={\"btn-loadScript\"}\r\n                className={classes.editorBtn}\r\n                onMouseEnter={() => {\r\n                  context.updateState(\"editorScript\", code);\r\n                }}\r\n                onMouseOver={handlePopoverOpen}\r\n                onMouseLeave={handlePopoverClose}\r\n                component={\"span\"}\r\n                htmlFor=\"icon-button-load-script\"\r\n              >\r\n                <IconLoad />\r\n              </IconButton>\r\n            </label>\r\n\r\n            <IconButton\r\n              id={\"btn-saveScript\"}\r\n              className={classes.editorBtn}\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onMouseEnter={() => {\r\n                context.updateState(\"editorScript\", code);\r\n              }}\r\n              onMouseOver={handlePopoverOpen}\r\n              onMouseLeave={handlePopoverClose}\r\n              onClick={handleSaveUserScript}\r\n              aria-label=\"close\"\r\n            >\r\n              <IconSave />\r\n            </IconButton>\r\n\r\n            <input\r\n              accept=\".json\"\r\n              multiple=\"multiple\"\r\n              className={classes.input}\r\n              id=\"icon-button-create-configs\"\r\n              onChange={(event) =>\r\n                handleCreateConfigurationsFile(event, configs)\r\n              }\r\n              onClick={(event) => {\r\n                //to allow consecutive selection of same files, we need to clear input value after each click.\r\n                event.target.value = \"\";\r\n              }}\r\n              type=\"file\"\r\n            />\r\n            <label htmlFor=\"icon-button-create-configs\">\r\n              <IconButton\r\n                id={\"btn-createConfigurationsFile\"}\r\n                className={classes.editorBtn}\r\n                onMouseEnter={() => {\r\n                  context.updateState(\"editorScript\", code);\r\n                }}\r\n                onMouseOver={handlePopoverOpen}\r\n                onMouseLeave={handlePopoverClose}\r\n                component={\"span\"}\r\n                htmlFor=\"icon-button-create-configs\"\r\n              >\r\n                <IconSettings />\r\n              </IconButton>\r\n            </label>\r\n\r\n            <Typography variant=\"h6\" className={classes.title}></Typography>\r\n            <Button\r\n              autoFocus\r\n              className={classes.editorBtn}\r\n              onClick={handleInfoButtonClick}\r\n              color=\"inherit\"\r\n            >\r\n              INFO\r\n            </Button>\r\n            <Button\r\n              autoFocus\r\n              className={classes.editorBtn}\r\n              color=\"inherit\"\r\n              onClick={handleAPIButtonClick}\r\n            >\r\n              API\r\n            </Button>\r\n            <Button\r\n              autoFocus\r\n              className={classes.editorBtn}\r\n              color=\"inherit\"\r\n              onClick={handleClearButtonClick}\r\n            >\r\n              CLEAR\r\n            </Button>\r\n            <Button\r\n              autoFocus\r\n              className={classes.editorBtn}\r\n              color=\"inherit\"\r\n              onClick={handleValidateScript}\r\n            >\r\n              VALIDATE\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <AceEditor\r\n          ref={ace}\r\n          name=\"ace-editor\"\r\n          mode=\"javascript\"\r\n          theme=\"monokai\"\r\n          width={\"100%\"}\r\n          height={\"100%\"}\r\n          value={editorScript}\r\n          fontSize={18}\r\n          onLoad={(editor) => {\r\n            restrictEditingSegment(editor);\r\n            extendAutocomplete(editor);\r\n          }}\r\n          showPrintMargin={false}\r\n          onChange={onChange}\r\n          setOptions={{\r\n            enableBasicAutocompletion: true,\r\n            enableSnippets: true,\r\n            enableLiveAutocompletion: true,\r\n            showLineNumbers: true,\r\n            tabSize: 2,\r\n          }}\r\n        />\r\n        <Message\r\n          message={showError}\r\n          setMessage={setShowError}\r\n          animationDelay={500}\r\n          topTitle={`Error!\\n`}\r\n          variant=\"filled\"\r\n          severity=\"error\"\r\n        />\r\n\r\n        <Message\r\n          message={showInfo}\r\n          setMessage={setShowInfo}\r\n          onClose={() => setFirstMount(false)}\r\n          animationDelay={firstMount ? 1500 : 500}\r\n          topTitle={`Welcome!\\n`}\r\n          bottomTitle={`Enjoy and code carefully!`}\r\n          variant=\"filled\"\r\n          severity=\"info\"\r\n        />\r\n        <Message\r\n          message={showClearWarning}\r\n          setMessage={setShowClearWarning}\r\n          animationDelay={500}\r\n          topTitle={`Warning!\\n`}\r\n          dismissable\r\n          variant=\"filled\"\r\n          severity=\"warning\"\r\n        >\r\n          <Grid container direction=\"row\" justify=\"flex-end\">\r\n            <Grid item>\r\n              <Button\r\n                className={classes.msgBtn}\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                onClick={handleCancelClearRequest}\r\n              >\r\n                CANCEL\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                className={classes.msgBtn}\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                onClick={handleConfirmClearRequest}\r\n              >\r\n                CONFIRM\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Message>\r\n\r\n        <Message\r\n          message={showSuccess}\r\n          setMessage={setShowSuccess}\r\n          animationDelay={500}\r\n          topTitle={`Validated Successfully!\\n`}\r\n          dismissable\r\n          variant=\"filled\"\r\n          severity=\"success\"\r\n        >\r\n          <Grid container direction=\"row\" justify=\"flex-end\">\r\n            <Grid item>\r\n              <Button\r\n                className={classes.msgBtn}\r\n                style={{ marginRight: \"12em\", marginLeft: 0 }}\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                onClick={handleDismiss}\r\n              >\r\n                DISMISS\r\n              </Button>\r\n              <Button\r\n                className={classes.msgBtn}\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                onClick={handleBenchmark}\r\n              >\r\n                BENCHMARK\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                className={classes.msgBtn}\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                onClick={handleRun}\r\n              >\r\n                RUN\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Message>\r\n        <APIDescriptor showAPI={showAPI} setShowAPI={setShowAPI} />\r\n        {showBenchmark && (\r\n          <Benchmark\r\n            showBenchmark={showBenchmark}\r\n            setShowBenchmark={setShowBenchmark}\r\n            onBenchmarkReplay={handleBenchmarkReplay}\r\n          />\r\n        )}\r\n      </Dialog>\r\n      <Popover\r\n        id=\"mouse-over-popover\"\r\n        className={classes.popover}\r\n        classes={{ paper: classes.paper }}\r\n        open={Boolean(anchorElSaveScript)}\r\n        anchorEl={anchorElSaveScript}\r\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\r\n        transformOrigin={{ vertical: \"top\", horizontal: \"left\" }}\r\n        onClose={handlePopoverClose}\r\n        disableRestoreFocus\r\n      >\r\n        <Typography className={classes.popoverText}>Save Script</Typography>\r\n      </Popover>\r\n      <Popover\r\n        id=\"mouse-over-popover\"\r\n        className={classes.popover}\r\n        classes={{ paper: classes.paper }}\r\n        open={Boolean(anchorElLoadScript)}\r\n        anchorEl={anchorElLoadScript}\r\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\r\n        transformOrigin={{ vertical: \"top\", horizontal: \"left\" }}\r\n        onClose={handlePopoverClose}\r\n        disableRestoreFocus\r\n      >\r\n        <Typography className={classes.popoverText}>Load Script</Typography>\r\n      </Popover>\r\n      <Popover\r\n        id=\"mouse-over-popover\"\r\n        className={classes.popover}\r\n        classes={{ paper: classes.paper }}\r\n        open={Boolean(anchorElCreateConfigurationsFile)}\r\n        anchorEl={anchorElCreateConfigurationsFile}\r\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\r\n        transformOrigin={{ vertical: \"top\", horizontal: \"left\" }}\r\n        onClose={handlePopoverClose}\r\n        disableRestoreFocus\r\n      >\r\n        <Typography className={classes.popoverText}>\r\n          Create Configurations File\r\n        </Typography>\r\n      </Popover>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n","import { saveAs } from \"file-saver\";\r\n\r\nexport const handleCreateConfigurationsFile = (event, configs) => {\r\n  const files = event.currentTarget.files;\r\n  for (const file of files) {\r\n    const reader = new FileReader();\r\n    reader.onload = (event) => {\r\n      configs.current = configs.current.concat([event.currentTarget.result]);\r\n    };\r\n    reader.readAsText(file);\r\n  }\r\n  setTimeout(() => {\r\n    const jsonFile = {};\r\n\r\n    configs.current.forEach((config, i) => {\r\n      const { grid, map, startNode, availableSteps } = JSON.parse(config);\r\n      jsonFile[`cfg${i}`] = {\r\n        grid,\r\n        map,\r\n        startNode,\r\n        availableSteps,\r\n      };\r\n    });\r\n    const blob = new Blob([JSON.stringify(jsonFile)]);\r\n    saveAs(blob, `configs.json`);\r\n  }, 2000);\r\n};\r\n","import React, { useContext } from \"react\";\n\nimport IconBattery0 from \"@material-ui/icons/BatteryAlert\";\nimport IconBattery20 from \"@material-ui/icons/Battery20\";\nimport IconBattery30 from \"@material-ui/icons/Battery30\";\nimport IconBattery50 from \"@material-ui/icons/Battery50\";\nimport IconBattery60 from \"@material-ui/icons/Battery60\";\nimport IconBattery80 from \"@material-ui/icons/Battery80\";\nimport IconBattery90 from \"@material-ui/icons/Battery90\";\nimport IconBatteryFull from \"@material-ui/icons/BatteryFull\";\n\nimport GlobalContext from \"../../Context/global-context\";\n\nconst InteractiveBattery = () => {\n  const context = useContext(GlobalContext);\n  const currentCapacity = context.convertAvailableStepsToBatteryCapacity();\n  switch (true) {\n    case currentCapacity >= 90:\n      return <IconBatteryFull />;\n\n    case currentCapacity >= 80:\n      return <IconBattery90 />;\n\n    case currentCapacity >= 70:\n      return <IconBattery80 />;\n\n    case currentCapacity >= 50:\n      return <IconBattery60 />;\n\n    case currentCapacity >= 40:\n      return <IconBattery50 />;\n\n    case currentCapacity >= 20:\n      return <IconBattery30 />;\n\n    case currentCapacity > 0:\n      return <IconBattery20 />;\n\n    case currentCapacity === 0:\n      return <IconBattery0 />;\n\n    default:\n      console.log(\"Default case in InteractiveBattery\");\n      return <IconBatteryFull />;\n  }\n};\n\nexport default InteractiveBattery;\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: 300 + theme.spacing(3) * 2,\r\n    textAlign: \"center\",\r\n    marginTop: \"0.5em\",\r\n    paddingLeft: \"2em\",\r\n    paddingRight: \"2em\",\r\n    marginBottom: \"0.5em\",\r\n  },\r\n  margin: {\r\n    height: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport const prettoSliderStyles = {\r\n  root: {\r\n    color: \"#1f2833\",\r\n    height: 8,\r\n  },\r\n  thumb: {\r\n    height: 24,\r\n    width: 24,\r\n    backgroundColor: \"#fff\",\r\n    border: \"2px solid currentColor\",\r\n    marginTop: -8,\r\n    marginLeft: -12,\r\n    \"&:focus, &:hover, &$active\": {\r\n      boxShadow: \"inherit\",\r\n    },\r\n  },\r\n  active: {},\r\n  valueLabel: {\r\n    left: \"calc(-50% + 4px)\",\r\n  },\r\n  track: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n  rail: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n};\r\n","import React, { useContext, useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PowerIcon from \"@material-ui/icons/Power\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport GlobalContext from \"../../../Context/global-context\";\n\nimport useStyles, { prettoSliderStyles } from \"./BatterySliderStyles\";\n\nfunction ValueLabelComponent({ children, open, value }) {\n  return (\n    <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\n      {children}\n    </Tooltip>\n  );\n}\n\nValueLabelComponent.propTypes = {\n  children: PropTypes.element.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nconst PrettoSlider = withStyles(prettoSliderStyles)(Slider);\n\nexport default function CustomizedSlider() {\n  const classes = useStyles();\n  const context = useContext(GlobalContext);\n\n  const [value, setValue] = useState(\n    context.convertAvailableStepsToBatteryCapacity()\n  );\n\n  const handleChange = (event, newValue) => {\n    if (context.state.isRunning) return;\n    setValue(newValue);\n  };\n\n  const handleSetBatteryButtonClicked = () => {\n    const steps = context.convertBatteryCapacityToAvailableSteps(value);\n    context.updateState(\"availableSteps\", steps);\n  };\n\n  useEffect(() => {\n    const newValue = context.convertAvailableStepsToBatteryCapacity();\n    setValue(newValue);\n  }, [context]);\n\n  return (\n    <div className={classes.root}>\n      <Typography gutterBottom>Set Battery</Typography>\n      <PrettoSlider\n        valueLabelDisplay=\"auto\"\n        aria-label=\"pretto slider\"\n        value={value}\n        onChange={handleChange}\n      />\n      <IconButton\n        color=\"primary\"\n        onClick={handleSetBatteryButtonClicked}\n        disabled={context.state.isRunning}\n      >\n        <PowerIcon\n          style={{\n            fontSize: \"32px\",\n          }}\n        />\n      </IconButton>\n    </div>\n  );\n}\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles((theme) => ({\n  input: {\n    display: \"none\",\n  },\n  icon: {\n    color: \"white\",\n    \"&:hover\": {\n      color: \"#66FCF1 !important\",\n      background: \"#1f2833\",\n      borderColor: \"black !important\",\n      transition: \"all 0.4s ease 0s\",\n    },\n    \"&:disabled\": {\n      color: \"#C5C6C7\",\n      transition: \"all 0.4s ease 0s\",\n    },\n  },\n  iconActive: {\n    color: \"#66FCF1 !important\",\n    background: \"#1f2833\",\n    borderColor: \"black !important\",\n    transition: \"all 0.4s ease 0s\",\n    \"&:disabled\": {\n      color: \"#C5C6C7 !important\",\n      transition: \"all 0.4s ease 0s\",\n    },\n  },\n  popover: {\n    pointerEvents: \"none\",\n  },\n  popoverText: {\n    padding: \"5px\",\n  },\n}));\n","import React, { useContext } from \"react\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport IconDrawFree from \"@material-ui/icons/Create\";\r\nimport IconDrawRectangle from \"@material-ui/icons/AspectRatio\";\r\nimport IconDrawObstacle from \"@material-ui/icons/TabUnselected\";\r\n\r\nimport IconSave from \"@material-ui/icons/GetApp\";\r\nimport IconLoad from \"@material-ui/icons/Publish\";\r\nimport IconDust from \"@material-ui/icons/BlurOn\";\r\nimport IconMap from \"@material-ui/icons/Map\";\r\nimport IconWall from \"@material-ui/icons/ViewQuilt\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport GlobalContext from \"../../Context/global-context\";\r\nimport InteractiveBattery from \"../Tools/InteractiveBattery\";\r\nimport BatterySlider from \"./BatterySlider/BatterySlider\";\r\n\r\nimport ToolsStyles from \"./Tools.Styles\";\r\n\r\nconst useStyles = ToolsStyles;\r\n//prettier-ignore\r\nconst Tools = () => {\r\n  const context = useContext(GlobalContext);\r\n\r\n  const { isRunning, isFinished, drawItem, drawMethod } = context.state;\r\n\r\n  const [anchorElDrawingItemDust, setAnchorElDrawingItemDust] = React.useState(null);\r\n  const [anchorElDrawingItemWall, setAnchorElDrawingItemWall] = React.useState(null);\r\n  const [anchorElDrawFree, setAnchorElDrawFree] = React.useState(null);\r\n  const [anchorElDrawRectangle, setAnchorElDrawRectangle] = React.useState(null);\r\n  const [anchorElSaveConfiguration,setAnchorElSaveConfiguration] = React.useState(null);\r\n  const [anchorElLoadConfiguration,setAnchorElLoadConfiguration] = React.useState(null);\r\n  const [anchorElHighlightMap, setAnchorElHighlightMap] = React.useState(null);\r\n  const [anchorElDrawObstacle, setAnchorElDrawObstacle] = React.useState(null);\r\n  const [anchorElBatteryCapacityClick,setAnchorElBatteryCapacityClick] = React.useState(null);\r\n  const [anchorElBatteryCapacityHover,setAnchorElBatteryCapacityHover] = React.useState(null);\r\n\r\n  const handleBatteryCapacityButtonClicked = (event) => {\r\n    setAnchorElBatteryCapacityClick(event.currentTarget);\r\n  };\r\n\r\n  const handleBatteryCapacityButtonClosed = (event) => {\r\n    setAnchorElBatteryCapacityClick(null);\r\n  };\r\n\r\n  const handlePopoverOpen = (event) => {\r\n    switch (event.currentTarget.id) {\r\n      case \"btn-free\":\r\n        setAnchorElDrawFree(event.currentTarget);\r\n        break;\r\n      case \"btn-rectangle\":\r\n        setAnchorElDrawRectangle(event.currentTarget);\r\n        break;\r\n      case \"btn-obstacle\":\r\n        setAnchorElDrawObstacle(event.currentTarget);\r\n        break;\r\n      case \"btn-saveConfig\":\r\n        setAnchorElSaveConfiguration(event.currentTarget);\r\n        break;\r\n      case \"btn-loadConfig\":\r\n        setAnchorElLoadConfiguration(event.currentTarget);\r\n        break;\r\n      case \"btn-map\":\r\n        setAnchorElHighlightMap(event.currentTarget);\r\n        break;\r\n      case \"btn-battery\":\r\n        setAnchorElBatteryCapacityHover(event.currentTarget);\r\n        break;\r\n      case \"btn-dust\":\r\n        setAnchorElDrawingItemDust(event.currentTarget);\r\n        break;\r\n      case \"btn-wall\":\r\n        setAnchorElDrawingItemWall(event.currentTarget);\r\n        break;\r\n      default:\r\n        console.log(\"Default case entered in Tools.jsx: handlePopoverOpen\");\r\n    }\r\n  };\r\n\r\n  const handlePopoverClose = (event) => {\r\n    switch (event.currentTarget.id) {\r\n      case \"btn-free\":\r\n        setAnchorElDrawFree(null);\r\n        break;\r\n      case \"btn-rectangle\":\r\n        setAnchorElDrawRectangle(null);\r\n        break;\r\n      case \"btn-obstacle\":\r\n        setAnchorElDrawObstacle(null);\r\n        break;\r\n      case \"btn-saveConfig\":\r\n        setAnchorElSaveConfiguration(null);\r\n        break;\r\n      case \"btn-loadConfig\":\r\n        setAnchorElLoadConfiguration(null);\r\n        break;\r\n      case \"btn-map\":\r\n        setAnchorElHighlightMap(null);\r\n        break;\r\n      case \"btn-battery\":\r\n        setAnchorElBatteryCapacityHover(null);\r\n        break;\r\n      case \"btn-dust\":\r\n        setAnchorElDrawingItemDust(null);\r\n        break;\r\n      case \"btn-wall\":\r\n        setAnchorElDrawingItemWall(null);\r\n        break;\r\n      default:\r\n        console.log(\"Default case entered in Tools.jsx: handlePopoverClose\");\r\n    }\r\n  };\r\n\r\n  const handleDrawingItemButtonClicked = (event) => {\r\n    context.updateState(\r\n      \"drawItem\",\r\n      event.currentTarget.id === \"btn-wall\" ? \"dust\" : \"wall\"\r\n    );\r\n    event.currentTarget.id === \"btn-wall\" && setAnchorElDrawingItemWall(null);\r\n    event.currentTarget.id === \"btn-dust\" && setAnchorElDrawingItemDust(null);\r\n  };\r\n\r\n  const handleDrawingMethodButtonClicked = (event) => {\r\n    context.updateState(\r\n      \"drawMethod\",\r\n      event.currentTarget.id === \"btn-free\"\r\n        ? \"free\"\r\n        : event.currentTarget.id === \"btn-rectangle\"\r\n        ? \"rectangle\"\r\n        : \"filled rectangle\"\r\n    );\r\n  };\r\n\r\n  const handleSaveConfiguration = async () => {\r\n    context.saveConfiguration();\r\n  };\r\n\r\n  const handleLoadConfiguration = (event) => {\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      const newLayout = JSON.parse(reader.result);\r\n      context.loadConfiguration(newLayout);\r\n    };\r\n    reader.readAsText(event.target.files[0]);\r\n  };\r\n\r\n  const handleMapButtonMouseDown = (event) => {\r\n    context.updateState(\"request\", \"highlightMap\");\r\n  };\r\n\r\n  /* change to mouse leave to avoid bugs? */\r\n  const handleMapButtonMouseUp = (event) => {\r\n    context.updateState(\"request\", \"removeHighlightMap\");\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.tools}>\r\n      {drawItem === \"dust\" ? (\r\n        <IconButton\r\n          id={\"btn-dust\"}\r\n          className={classes.iconActive}\r\n          onClick={handleDrawingItemButtonClicked}\r\n          disabled={isRunning}\r\n          onMouseOver={handlePopoverOpen}\r\n          onMouseLeave={handlePopoverClose}\r\n        >\r\n          <IconDust />\r\n        </IconButton>\r\n      ) : (\r\n        <IconButton\r\n          id={\"btn-wall\"}\r\n          className={classes.iconActive}\r\n          onClick={handleDrawingItemButtonClicked}\r\n          disabled={isRunning}\r\n          onMouseOver={handlePopoverOpen}\r\n          onMouseLeave={handlePopoverClose}\r\n        >\r\n          <IconWall />\r\n        </IconButton>\r\n      )}\r\n      <IconButton\r\n        id={\"btn-free\"}\r\n        className={drawMethod === \"free\" ? classes.iconActive : classes.icon}\r\n        onClick={handleDrawingMethodButtonClicked}\r\n        onMouseOver={handlePopoverOpen}\r\n        onMouseLeave={handlePopoverClose}\r\n        disabled={isRunning || isFinished}\r\n      >\r\n        <IconDrawFree />\r\n      </IconButton>\r\n      <IconButton\r\n        id={\"btn-rectangle\"}\r\n        className={\r\n          drawMethod === \"rectangle\" ? classes.iconActive : classes.icon\r\n        }\r\n        onClick={handleDrawingMethodButtonClicked}\r\n        onMouseOver={handlePopoverOpen}\r\n        onMouseLeave={handlePopoverClose}\r\n        hidden={true}\r\n        disabled={isRunning || isFinished}\r\n      >\r\n        <IconDrawRectangle />\r\n      </IconButton>\r\n      <IconButton\r\n        id={\"btn-obstacle\"}\r\n        className={\r\n          drawMethod === \"filled rectangle\" && !isRunning\r\n            ? classes.iconActive\r\n            : classes.icon\r\n        }\r\n        onClick={handleDrawingMethodButtonClicked}\r\n        onMouseOver={handlePopoverOpen}\r\n        onMouseLeave={handlePopoverClose}\r\n        disabled={isRunning || isFinished}\r\n      >\r\n        <IconDrawObstacle />\r\n      </IconButton>\r\n\r\n      <input\r\n        accept=\".json\"\r\n        className={classes.input}\r\n        id=\"icon-button-load-config\"\r\n        onChange={handleLoadConfiguration}\r\n        onClick={(event) => {\r\n          //to allow consecutive selection of same files, we need to clear input value after each click.\r\n          event.target.value = \"\";\r\n        }}\r\n        type=\"file\"\r\n      />\r\n      <label htmlFor=\"icon-button-load-config\">\r\n        <IconButton\r\n          id={\"btn-loadConfig\"}\r\n          className={classes.icon}\r\n          onMouseOver={handlePopoverOpen}\r\n          onMouseLeave={handlePopoverClose}\r\n          disabled={isRunning}\r\n          component={!isRunning ? \"span\" : undefined}\r\n          htmlFor=\"icon-button-load-config\"\r\n        >\r\n          <IconLoad />\r\n        </IconButton>\r\n      </label>\r\n\r\n      <IconButton\r\n        id={\"btn-saveConfig\"}\r\n        className={classes.icon}\r\n        onMouseOver={handlePopoverOpen}\r\n        onMouseLeave={handlePopoverClose}\r\n        disabled={isRunning}\r\n        onClick={handleSaveConfiguration}\r\n      >\r\n        <IconSave />\r\n      </IconButton>\r\n\r\n      <IconButton\r\n        id={\"btn-map\"}\r\n        className={classes.icon}\r\n        onMouseOver={handlePopoverOpen}\r\n        onMouseLeave={handlePopoverClose}\r\n        disabled={isRunning}\r\n        onMouseDown={handleMapButtonMouseDown}\r\n        onMouseUp={handleMapButtonMouseUp}\r\n      >\r\n        <IconMap />\r\n      </IconButton>\r\n\r\n      <IconButton\r\n        id={\"btn-battery\"}\r\n        className={classes.icon}\r\n        onClick={handleBatteryCapacityButtonClicked}\r\n        onMouseOver={handlePopoverOpen}\r\n        onMouseLeave={handlePopoverClose}\r\n      >\r\n        <InteractiveBattery />\r\n      </IconButton>\r\n\r\n      <Popover\r\n        id=\"mouse-over-popover\"\r\n        className={classes.popover}\r\n        classes={{paper: classes.paper}}\r\n        open={Boolean(anchorElSaveConfiguration)}\r\n        anchorEl={anchorElSaveConfiguration}\r\n        anchorOrigin={{vertical: \"bottom\",horizontal: \"left\"}}\r\n        transformOrigin={{vertical: \"top\",horizontal: \"left\"}}\r\n        onClose={handlePopoverClose}\r\n        disableRestoreFocus\r\n      >\r\n        <Typography className={classes.popoverText}>\r\n          Save Configuration\r\n        </Typography>\r\n      </Popover>\r\n      <Popover\r\n        id=\"mouse-over-popover\"\r\n        className={classes.popover}\r\n        classes={{paper: classes.paper,}}\r\n        open={Boolean(anchorElDrawingItemDust)}\r\n        anchorEl={anchorElDrawingItemDust}\r\n        anchorOrigin={{vertical: \"bottom\",horizontal: \"left\"}}\r\n        transformOrigin={{vertical: \"top\",horizontal: \"left\"}}\r\n        onClose={handlePopoverClose}\r\n        disableRestoreFocus\r\n      >\r\n        <Typography className={classes.popoverText}>Dust</Typography>\r\n      </Popover>\r\n      <Popover\r\n        id=\"mouse-over-popover\"\r\n        className={classes.popover}\r\n        classes={{paper: classes.paper}}\r\n        open={Boolean(anchorElDrawingItemWall)}\r\n        anchorEl={anchorElDrawingItemWall}\r\n        anchorOrigin={{vertical: \"bottom\",horizontal: \"left\"}}\r\n        transformOrigin={{vertical: \"top\",horizontal: \"left\"}}\r\n        onClose={handlePopoverClose}\r\n        disableRestoreFocus\r\n      >\r\n        <Typography className={classes.popoverText}>Wall</Typography>\r\n      </Popover>\r\n      <Popover\r\n        id=\"mouse-over-popover\"\r\n        className={classes.popover}\r\n        classes={{paper: classes.paper,}}\r\n        open={Boolean(anchorElLoadConfiguration)}\r\n        anchorEl={anchorElLoadConfiguration}\r\n        anchorOrigin={{vertical: \"bottom\",horizontal: \"left\"}}\r\n        transformOrigin={{vertical: \"top\",horizontal: \"left\"}}\r\n        onClose={handlePopoverClose}\r\n        disableRestoreFocus\r\n      >\r\n        <Typography className={classes.popoverText}>\r\n          Load Configuration\r\n        </Typography>\r\n      </Popover>\r\n      <Popover\r\n        id=\"mouse-over-popover\"\r\n        className={classes.popover}\r\n        classes={{paper: classes.paper}}\r\n        open={Boolean(anchorElDrawFree)}\r\n        anchorEl={anchorElDrawFree}\r\n        anchorOrigin={{vertical: \"bottom\",horizontal: \"left\"}}\r\n        transformOrigin={{vertical: \"top\",horizontal: \"left\"}}\r\n        onClose={handlePopoverClose}\r\n        disableRestoreFocus\r\n      >\r\n        <Typography className={classes.popoverText}>Pen</Typography>\r\n      </Popover>\r\n      <Popover\r\n        id=\"mouse-over-popover\"\r\n        className={classes.popover}\r\n        classes={{paper: classes.paper}}\r\n        open={Boolean(anchorElDrawObstacle)}\r\n        anchorEl={anchorElDrawObstacle}\r\n        anchorOrigin={{vertical: \"bottom\",horizontal: \"left\"}}\r\n        transformOrigin={{vertical: \"top\",horizontal: \"left\"}}\r\n        onClose={handlePopoverClose}\r\n        disableRestoreFocus\r\n      >\r\n        <Typography className={classes.popoverText}>\r\n          Filled Rectangle\r\n        </Typography>\r\n      </Popover>\r\n      <Popover\r\n        id=\"mouse-over-popover\"\r\n        className={classes.popover}\r\n        classes={{paper: classes.paper}}\r\n        open={Boolean(anchorElDrawRectangle)}\r\n        anchorEl={anchorElDrawRectangle}\r\n        anchorOrigin={{vertical: \"bottom\",horizontal: \"left\"}}\r\n        transformOrigin={{vertical: \"top\",horizontal: \"left\"}}\r\n        onClose={handlePopoverClose}\r\n        disableRestoreFocus\r\n      >\r\n        <Typography className={classes.popoverText}>Rectangle</Typography>\r\n      </Popover>\r\n\r\n      <Popover\r\n        id=\"mouse-over-popover\"\r\n        className={classes.popover}\r\n        classes={{paper: classes.paper}}\r\n        open={Boolean(anchorElHighlightMap)}\r\n        anchorEl={anchorElHighlightMap}\r\n        anchorOrigin={{vertical: \"bottom\",horizontal: \"left\"}}\r\n        transformOrigin={{vertical: \"top\",horizontal: \"left\"}}\r\n        onClose={handlePopoverClose}\r\n        disableRestoreFocus>\r\n        <Typography className={classes.popoverText}>\r\n          Highlight Robot Map\r\n        </Typography>\r\n      </Popover>\r\n\r\n      <Popover\r\n        id=\"mouse-over-popover\"\r\n        className={classes.popover}\r\n        classes={{paper: classes.paper,}}\r\n        open={Boolean(anchorElBatteryCapacityHover)}\r\n        anchorEl={anchorElBatteryCapacityHover}\r\n        anchorOrigin={{vertical: \"bottom\",horizontal: \"left\"}}\r\n        transformOrigin={{vertical: \"top\",horizontal: \"left\"}}\r\n        onClose={handlePopoverClose}\r\n        disableRestoreFocus>\r\n        <Typography className={classes.popoverText}>\r\n          Battery: {context.convertAvailableStepsToBatteryCapacity()}%\r\n        </Typography>\r\n      </Popover>\r\n\r\n      <Popover\r\n        id=\"simple-popover\"\r\n        open={Boolean(anchorElBatteryCapacityClick)}\r\n        anchorEl={anchorElBatteryCapacityClick}\r\n        onClose={handleBatteryCapacityButtonClosed}\r\n        anchorOrigin={{vertical: \"bottom\",horizontal: \"center\"}}\r\n        transformOrigin={{vertical: \"top\",horizontal: \"center\"}}>\r\n        <BatterySlider />\r\n      </Popover>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tools;\r\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Menu from \"@material-ui/core/Menu\";\n\nexport default withStyles({\n  paper: {\n    border: \"1px solid #d3d4d5\",\n    backgroundColor: \"#1F2833\",\n  },\n})((props) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: \"bottom\",\n      horizontal: \"center\",\n    }}\n    transformOrigin={{\n      vertical: \"top\",\n      horizontal: \"center\",\n    }}\n    {...props}\n  />\n));\n","import React, { useContext } from \"react\";\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport CodeIcon from \"@material-ui/icons/Code\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport Editor from \"../Editor/Editor\";\r\n\r\nimport Tools from \"../Tools/Tools\";\r\n\r\nimport StyledMenu from \"./StyledMenu\";\r\nimport controllerStyles from \"./Controller.Styles\";\r\n\r\nimport GlobalContext from \"../../Context/global-context\";\r\n\r\nimport * as mappingAlgorithms from \"../../Algorithms/mappingAlgorithms\";\r\nimport * as cleaningAlgorithms from \"../../Algorithms/cleaningAlgorithms\";\r\n\r\nconst useStyles = controllerStyles;\r\n\r\nconst Controller = () => {\r\n  const [anchorElMapAlgMenu, setAnchorElMapAlgMenu] = React.useState(null);\r\n  const [anchorElCleanAlgMenu, setAnchorElCleanAlgMenu] = React.useState(null);\r\n  const [\r\n    anchorElSimulationTypeMenu,\r\n    setAnchorElSimulationType,\r\n  ] = React.useState(null);\r\n  const [codeEditorOpen, setCodeEditorOpen] = React.useState(false);\r\n  const context = useContext(GlobalContext);\r\n  const classes = useStyles();\r\n  const { drawItem } = context.state;\r\n\r\n  const handleSimulationTypeSelected = (selectedSimulationType) => {\r\n    const { simulationType } = context.state;\r\n    if (simulationType !== selectedSimulationType) {\r\n      context.updateState(\"simulationType\", selectedSimulationType);\r\n      context.updateState(\"activeAlgorithm\", null);\r\n    }\r\n    handleSimulationTypeMenuClose();\r\n  };\r\n\r\n  const handleAlgorithmSelected = (selectedAlgorithm, menuCloseCallback) => {\r\n    context.updateState(\"activeAlgorithm\", selectedAlgorithm);\r\n    context.updateState(\"editorSimulation\", false);\r\n    menuCloseCallback();\r\n  };\r\n\r\n  const handleAlgorithmSelectionMenuClicked = (event) => {\r\n    if (context.state.simulationType === \"map\") {\r\n      setAnchorElMapAlgMenu(event.currentTarget);\r\n    } else {\r\n      setAnchorElCleanAlgMenu(event.currentTarget);\r\n    }\r\n  };\r\n  const handleSimulationTypeSelectionClicked = (event) => {\r\n    setAnchorElSimulationType(event.currentTarget);\r\n  };\r\n  const handleMapMenuClose = () => {\r\n    setAnchorElMapAlgMenu(null);\r\n  };\r\n\r\n  const handleCleanAlgMenuClose = () => {\r\n    setAnchorElCleanAlgMenu(null);\r\n  };\r\n  const handleSimulationTypeMenuClose = () => {\r\n    setAnchorElSimulationType(null);\r\n  };\r\n\r\n  const handleClearWallsRequested = () => {\r\n    context.updateState(\"request\", \"clearWalls\");\r\n  };\r\n  const handleClearDustRequested = () => {\r\n    context.updateState(\"request\", \"clearDust\");\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"relative\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <Grid container justify=\"space-between\" alignItems=\"center\">\r\n          <Grid item>\r\n            <Typography variant=\"h4\" className={classes.logoPlaceholder}>\r\n              Sweepify\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              className={classes.navButton}\r\n              style={{ marginLeft: \"10em\" }}\r\n              aria-controls=\"customized-menu\"\r\n              aria-haspopup=\"true\"\r\n              variant=\"contained\"\r\n              disabled={context.state.isRunning}\r\n              onClick={handleSimulationTypeSelectionClicked}\r\n            >\r\n              {context.state.simulationType\r\n                ? context.state.simulationType\r\n                : \"SIMULATION TYPE\"}\r\n            </Button>\r\n            {context.state.simulationType !== \"map\" &&\r\n              context.state.simulationType !== \"sweep\" && (\r\n                <Button\r\n                  className={classes.navButton}\r\n                  aria-controls=\"customized-menu\"\r\n                  aria-haspopup=\"true\"\r\n                  variant=\"contained\"\r\n                  disabled={true}\r\n                >\r\n                  SELECT\r\n                </Button>\r\n              )}\r\n            {(context.state.simulationType === \"map\" ||\r\n              context.state.simulationType === \"sweep\") && (\r\n              <Button\r\n                className={classes.navButton}\r\n                aria-controls=\"customized-menu\"\r\n                aria-haspopup=\"true\"\r\n                variant=\"contained\"\r\n                disabled={context.state.isRunning}\r\n                onClick={handleAlgorithmSelectionMenuClicked}\r\n              >\r\n                {context.state.editorSimulation?.type === \"user\"\r\n                  ? \"USER SCRIPT\"\r\n                  : context.state.editorSimulation?.type === \"replay\"\r\n                  ? \"REPLAY\"\r\n                  : context.state.activeAlgorithm\r\n                  ? context.state.activeAlgorithm.shortened\r\n                  : \"SELECT\"}\r\n              </Button>\r\n            )}\r\n            {drawItem === \"wall\" && (\r\n              <Button\r\n                className={classes.navButton}\r\n                aria-haspopup=\"true\"\r\n                disabled={context.state.isRunning}\r\n                variant=\"contained\"\r\n                onClick={handleClearWallsRequested}\r\n              >\r\n                Clear Walls\r\n              </Button>\r\n            )}\r\n            {drawItem === \"dust\" && (\r\n              <Button\r\n                className={classes.navButton}\r\n                aria-haspopup=\"true\"\r\n                disabled={context.state.isRunning}\r\n                variant=\"contained\"\r\n                onClick={handleClearDustRequested}\r\n              >\r\n                Clear Dust\r\n              </Button>\r\n            )}\r\n          </Grid>\r\n\r\n          <StyledMenu\r\n            className={classes.menu}\r\n            id=\"customized-menu\"\r\n            anchorEl={anchorElSimulationTypeMenu}\r\n            keepMounted\r\n            open={Boolean(anchorElSimulationTypeMenu)}\r\n            onClose={handleSimulationTypeMenuClose}\r\n          >\r\n            <MenuItem\r\n              className={classes.menuItem}\r\n              onClick={() => handleSimulationTypeSelected(\"map\")}\r\n            >\r\n              <ListItemText primary=\"MAP\" className={classes.menuItemText} />\r\n            </MenuItem>\r\n            <MenuItem\r\n              className={classes.menuItem}\r\n              onClick={() => handleSimulationTypeSelected(\"sweep\")}\r\n            >\r\n              <ListItemText primary=\"SWEEP\" className={classes.menuItemText} />\r\n            </MenuItem>\r\n          </StyledMenu>\r\n          <StyledMenu\r\n            className={classes.menu}\r\n            id=\"customized-menu\"\r\n            anchorEl={anchorElMapAlgMenu}\r\n            keepMounted\r\n            open={Boolean(anchorElMapAlgMenu)}\r\n            onClose={handleMapMenuClose}\r\n          >\r\n            {mappingAlgorithms.data.map((algorithm) => (\r\n              <MenuItem\r\n                key={algorithm.name}\r\n                className={classes.menuItem}\r\n                onClick={() => {\r\n                  handleAlgorithmSelected(algorithm, handleMapMenuClose);\r\n                }}\r\n              >\r\n                <ListItemText\r\n                  primary={algorithm.name}\r\n                  className={classes.menuItemText}\r\n                />\r\n              </MenuItem>\r\n            ))}\r\n            <MenuItem\r\n              className={classes.menuItem}\r\n              onClick={() => {\r\n                setCodeEditorOpen(true);\r\n                handleMapMenuClose();\r\n              }}\r\n            >\r\n              <ListItemText\r\n                primary=\"Try it yourself!\"\r\n                className={classes.menuItemText}\r\n              />\r\n              <CodeIcon />\r\n            </MenuItem>\r\n          </StyledMenu>\r\n          <StyledMenu\r\n            className={classes.menu}\r\n            id=\"customized-menu\"\r\n            anchorEl={anchorElCleanAlgMenu}\r\n            keepMounted\r\n            open={Boolean(anchorElCleanAlgMenu)}\r\n            onClose={handleCleanAlgMenuClose}\r\n          >\r\n            {cleaningAlgorithms.data.map((algorithm) => (\r\n              <MenuItem\r\n                key={algorithm.name}\r\n                className={classes.menuItem}\r\n                onClick={() => {\r\n                  handleAlgorithmSelected(algorithm, handleCleanAlgMenuClose);\r\n                }}\r\n              >\r\n                <ListItemText\r\n                  primary={algorithm.name}\r\n                  className={classes.menuItemText}\r\n                />\r\n              </MenuItem>\r\n            ))}\r\n            <MenuItem\r\n              className={classes.menuItem}\r\n              onClick={() => {\r\n                setCodeEditorOpen(true);\r\n                handleCleanAlgMenuClose();\r\n              }}\r\n            >\r\n              <ListItemText\r\n                primary=\"Try it yourself!\"\r\n                className={classes.menuItemText}\r\n              />\r\n            </MenuItem>\r\n          </StyledMenu>\r\n          <Grid item hidden>\r\n            <Editor\r\n              setCodeEditorOpen={setCodeEditorOpen}\r\n              open={codeEditorOpen}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Tools />\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Controller;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles((theme) => ({\n  navButton: {\n    color: \"white !important\",\n    fontSize: \"14px\",\n    textTransform: \"uppercase\",\n    background: \"#1F2833\",\n    width: \"12em\",\n    textAlign: \"center\",\n    padding: \"5px\",\n    border: \"2px solid #66FCF1 !important\",\n    transition: \"all 0.4s ease 0s\",\n    \"&:hover\": {\n      color: \"black !important\",\n      background: \"#66FCF1\",\n      borderColor: \"black !important\",\n      transition: \"all 0.4s ease 0s\",\n    },\n    \"&:disabled\": {\n      color: \"#C5C6C7 !important\",\n      borderColor: \"#C5C6C7 !important\",\n      transition: \"all 0.4s ease 0s\",\n    },\n  },\n  listItemTxt: {\n    textDecoration: \"none\",\n  },\n  menuItem: {\n    backgroundColor: \"#1F2833\",\n    color: \"white\",\n    fontSize: \"4px\",\n    \"&:hover\": {\n      backgroundColor: \"#1f2833\",\n      color: \"#66FCF1\",\n    },\n  },\n  toolbar: {\n    backgroundColor: \"#1F2833\",\n    height: \"6em\",\n    padding: \"0 10px\",\n  },\n  logoPlaceholder: {\n    fontWeight: 500,\n    fontStyle: \"italic\",\n  },\n  appBar: {\n    zIndex: \"0\",\n    marginBottom: \"2em\",\n  },\n}));\n","import { createMuiTheme } from \"@material-ui/core/styles\";\nimport handPointer from \"./assets/cursors/link.cur\";\n\nexport default createMuiTheme({\n  overrides: {\n    MuiSlider: {\n      root: {\n        cursor: `url(${handPointer}), auto`,\n      },\n    },\n    MuiIconButton: {\n      root: {\n        \"&:hover\": {\n          backgroundColor: \"transparent\",\n        },\n      },\n    },\n    MuiButton: {\n      root: {\n        margin: \"1em\",\n        \"&:disabled\": {\n          backgroundColor: \"#FFFF\",\n        },\n      },\n    },\n    MuiButtonBase: {\n      root: {\n        cursor: `url(${handPointer}), auto`,\n      },\n    },\n  },\n  typography: {\n    fontFamily: \"Orbitron\",\n    h2: {\n      fontWeight: \"500\",\n    },\n    subtitle1: {\n      fontWeight: \"400\",\n      fontSize: \"15px\",\n      letterSpacing: \"1px\",\n    },\n    subtitle2: {\n      fontWeight: \"500\",\n    },\n  },\n  palette: {\n    primary: {\n      main: \"#1f2833\",\n      dark: \"#1f2833\",\n      contrastText: \"#fff\",\n      disabled: \"#C5C6C7\",\n    },\n    secondary: {\n      main: \"#fff\",\n      contrastText: \"#fff\",\n      disabled: \"#C5C6C7\",\n    },\n  },\n});\n","import { MAX_DISTANCE } from \"../Algorithms/algorithmUtils\";\r\n\r\nexport const DEFAULT_GRID_HEIGHT = 20;\r\nexport const DEFAULT_GRID_WIDTH = 40;\r\n\r\nexport const calculateDefaultDockingStation = (height, width) => {\r\n  const defaultDockingStation = {\r\n    row: Math.floor(height / 2),\r\n    col: Math.floor(width / 2),\r\n  };\r\n  return defaultDockingStation;\r\n};\r\n\r\nexport const createNode = (row, col, isWall = false) => {\r\n  return {\r\n    row,\r\n    col,\r\n    distance: MAX_DISTANCE,\r\n    dust: 0,\r\n    heuristicDistance: MAX_DISTANCE,\r\n    isWall: isWall,\r\n    previousNode: null,\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport GlobalContext from \"./global-context\";\r\nimport {\r\n  DEFAULT_GRID_HEIGHT,\r\n  DEFAULT_GRID_WIDTH,\r\n  calculateDefaultDockingStation,\r\n  createNode,\r\n} from \"./GlobalStateUtils\";\r\nimport { DEFAULT_EDITOR_MARKUP } from \"../Components/Editor/code\";\r\nimport Robot from \"../Classes/Robot\";\r\nimport { resetGridSearchProperties } from \"../Algorithms/algorithmUtils\";\r\n\r\nimport * as mappingAlgorithms from \"../Algorithms/mappingAlgorithms\";\r\nimport * as cleaningAlgorithms from \"../Algorithms/cleaningAlgorithms\";\r\n\r\nimport { saveAs } from \"file-saver\";\r\n\r\n/* Grid logical context, everything related to visualizing it is sitting in visualizer.jsx */\r\n\r\nclass GlobalState extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.gridHeight = DEFAULT_GRID_HEIGHT;\r\n    this.gridWidth = DEFAULT_GRID_WIDTH;\r\n    const defaultDockingStation = calculateDefaultDockingStation(\r\n      this.gridHeight,\r\n      this.gridWidth\r\n    );\r\n    this.state = {\r\n      grid: [],\r\n      availableSteps: this.gridHeight * this.gridWidth,\r\n      simulationType: undefined,\r\n      activeAlgorithm: undefined,\r\n      editorScript: DEFAULT_EDITOR_MARKUP,\r\n      editorSimulation: false,\r\n      isFinished: false,\r\n      isRunning: false,\r\n      startNode: defaultDockingStation,\r\n      configLoaded: false,\r\n      drawMethod: \"free\",\r\n      drawItem: \"dust\",\r\n      request: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const grid = this.getInitialGrid();\r\n    this.robot = new Robot(grid);\r\n    this.setState({ grid });\r\n  }\r\n\r\n  resizeGrid = (height, callback, param) => {\r\n    this.gridHeight = height;\r\n    this.gridWidth = height * 2;\r\n    const defaultDockingStation = calculateDefaultDockingStation(\r\n      this.gridHeight,\r\n      this.gridWidth\r\n    );\r\n    const grid = this.getInitialGrid();\r\n    this.robot = new Robot(grid);\r\n    this.setState(\r\n      {\r\n        grid,\r\n        availableSteps: this.gridHeight * this.gridWidth,\r\n        startNode: defaultDockingStation,\r\n        simulationType: undefined,\r\n        activeAlgorithm: undefined,\r\n        isFinished: false,\r\n        isRunning: false,\r\n      },\r\n      () => callback && callback(param)\r\n    );\r\n  };\r\n\r\n  saveConfiguration = () => {\r\n    const {\r\n      grid,\r\n      availableSteps,\r\n      startNode,\r\n      simulationType,\r\n      activeAlgorithm,\r\n    } = this.state;\r\n    const { map } = this.robot;\r\n    const blob = new Blob([\r\n      JSON.stringify({\r\n        grid,\r\n        map,\r\n        availableSteps,\r\n        startNode,\r\n        simulationType,\r\n        activeAlgorithm,\r\n      }),\r\n    ]);\r\n    const [rows, cols] = [this.gridHeight, this.gridWidth];\r\n    saveAs(\r\n      blob,\r\n      `Grid Snapshot ${rows}*${cols} ${new Date()\r\n        .toLocaleDateString()\r\n        .replace(/\\./g, \"-\")} at ${new Date()\r\n        .toLocaleTimeString()\r\n        .replace(/:/g, \".\")}.json`\r\n    );\r\n  };\r\n\r\n  loadConfiguration = (config) => {\r\n    const {\r\n      grid,\r\n      map,\r\n      startNode,\r\n      availableSteps,\r\n      simulationType,\r\n      activeAlgorithm,\r\n    } = config;\r\n    const retrieveFunctionReference = (name) => {\r\n      const functions = mappingAlgorithms.data.concat(cleaningAlgorithms.data);\r\n      for (const funcObj of functions) {\r\n        if (funcObj.name === name) return funcObj.func;\r\n      }\r\n    };\r\n    this.robot = new Robot(grid);\r\n    this.robot.map = map;\r\n    this.gridHeight = grid.length;\r\n    this.gridWidth = grid[0].length;\r\n    this.setState(\r\n      {\r\n        grid,\r\n        availableSteps,\r\n        startNode,\r\n        simulationType,\r\n        activeAlgorithm: activeAlgorithm\r\n          ? {\r\n              ...activeAlgorithm,\r\n              func: retrieveFunctionReference(activeAlgorithm?.name),\r\n            }\r\n          : undefined,\r\n        configLoaded: true,\r\n      },\r\n      () => {\r\n        resetGridSearchProperties(this.state.grid);\r\n        resetGridSearchProperties(this.robot.map);\r\n      }\r\n    );\r\n  };\r\n\r\n  saveUserScript = () => {\r\n    const { editorScript } = this.state;\r\n    const blob = new Blob([\r\n      JSON.stringify({\r\n        editorScript,\r\n      }),\r\n    ]);\r\n    saveAs(\r\n      blob,\r\n      `User Script Snapshot ${new Date()\r\n        .toLocaleDateString()\r\n        .replace(/\\./g, \"-\")} at ${new Date()\r\n        .toLocaleTimeString()\r\n        .replace(/:/g, \".\")}.json`\r\n    );\r\n  };\r\n\r\n  loadUserScript = (script) => {\r\n    this.setState({\r\n      editorScript: script,\r\n    });\r\n  };\r\n\r\n  resetGridWithCurrentConfiguration = (callback, param) => {\r\n    const grid = [];\r\n    for (let row = 0; row < this.gridHeight; row++) {\r\n      const currentRow = [];\r\n      for (let col = 0; col < this.gridWidth; col++) {\r\n        currentRow.push({ ...this.state.grid[row][col] });\r\n      }\r\n      grid.push(currentRow);\r\n    }\r\n    this.setState({ grid }, () => {\r\n      callback && callback(param);\r\n    });\r\n  };\r\n\r\n  getInitialGrid = () => {\r\n    const grid = [];\r\n    for (let row = 0; row < this.gridHeight; row++) {\r\n      const currentRow = [];\r\n      for (let col = 0; col < this.gridWidth; col++) {\r\n        currentRow.push(createNode(row, col));\r\n      }\r\n      grid.push(currentRow);\r\n    }\r\n    return grid;\r\n  };\r\n\r\n  updateState = (key, value, callback, param) => {\r\n    /* if the state update requires to run a function after state changes then we\r\n    will call this updateState with the callback, otherwise we wouldn't, so on\r\n    regular state updates we dont want to invoke undefined function. */\r\n    this.setState({ [key]: value }, () => {\r\n      callback && callback(param);\r\n    });\r\n  };\r\n\r\n  isStartNode = (row, col) => {\r\n    return row === this.state.startNode.row && col === this.state.startNode.col;\r\n  };\r\n\r\n  convertAvailableStepsToBatteryCapacity = (grid, availableSteps) => {\r\n    /* We are using this function in relation to the current loaded configuration and also in the DataRow of Benchmark component,\r\n    so we need to take care of both cases. */\r\n    const currSteps = !availableSteps\r\n      ? this.state.availableSteps\r\n      : availableSteps;\r\n    const gridHeight = !grid ? this.gridHeight : grid.length;\r\n    const gridWidth = !grid ? this.gridWidth : grid[0].length;\r\n    return Math.floor((currSteps / (gridHeight * gridWidth)) * 100);\r\n  };\r\n\r\n  convertBatteryCapacityToAvailableSteps = (battery) => {\r\n    return Math.floor((battery / 100) * (this.gridHeight * this.gridWidth));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <GlobalContext.Provider\r\n        value={{\r\n          state: this.state,\r\n          robot: this.robot,\r\n          isStartNode: this.isStartNode,\r\n          convertBatteryCapacityToAvailableSteps: this\r\n            .convertBatteryCapacityToAvailableSteps,\r\n          convertAvailableStepsToBatteryCapacity: this\r\n            .convertAvailableStepsToBatteryCapacity,\r\n          updateState: this.updateState,\r\n          getInitialGrid: this.getInitialGrid,\r\n          resizeGrid: this.resizeGrid,\r\n          saveConfiguration: this.saveConfiguration,\r\n          loadConfiguration: this.loadConfiguration,\r\n          saveUserScript: this.saveUserScript,\r\n          loadUserScript: this.loadUserScript,\r\n          resetGridWithCurrentConfiguration: this\r\n            .resetGridWithCurrentConfiguration,\r\n          gridHeight: this.gridHeight,\r\n          gridWidth: this.gridWidth,\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </GlobalContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GlobalState;\r\n","import React from \"react\";\r\n\r\nimport Visualizer from \"./Components/Visualizer/Visualizer\";\r\nimport Controller from \"./Components/Controller/Controller.jsx\";\r\n\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport theme from \"./Theme.js\";\r\nimport \"./App.css\";\r\n\r\nimport GlobalState from \"./Context/GlobalState.jsx\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <ThemeProvider theme={theme}>\r\n        <GlobalState>\r\n          <Controller />\r\n          <Visualizer />\r\n        </GlobalState>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}